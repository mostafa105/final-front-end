{"ast":null,"code":"import Swal from \"sweetalert2\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/test.service\";\nimport * as i2 from \"src/app/services/user-data.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"ngx-countdown\";\nfunction TestComponent_div_11_span_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 12);\n    i0.ɵɵtext(1, \" *You Must answer this Question\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TestComponent_div_11_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 16)(1, \"label\", 17)(2, \"input\", 18);\n    i0.ɵɵlistener(\"change\", function TestComponent_div_11_div_7_Template_input_change_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r10);\n      const answer_r6 = restoredCtx.$implicit;\n      const i_r3 = i0.ɵɵnextContext().index;\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.choose(i_r3, answer_r6.id));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const answer_r6 = ctx.$implicit;\n    const i_r3 = i0.ɵɵnextContext().index;\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"name\", i_r3);\n    i0.ɵɵpropertyInterpolate(\"value\", answer_r6.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(answer_r6.body);\n  }\n}\nfunction TestComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4)(1, \"div\", 11)(2, \"span\", 12);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"h5\", 13);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(6, TestComponent_div_11_span_6_Template, 2, 0, \"span\", 14);\n    i0.ɵɵtemplate(7, TestComponent_div_11_div_7_Template, 5, 3, \"div\", 15);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const question_r2 = ctx.$implicit;\n    const i_r3 = ctx.index;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Q.\", i_r3 + 1, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", question_r2.body, \"?\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.isAnswered(i_r3) && ctx_r1.isSubmited);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", question_r2.answers);\n  }\n}\nconst _c0 = function () {\n  return {\n    leftTime: 1800\n  };\n};\nexport class TestComponent {\n  constructor(testService, userDataService) {\n    this.testService = testService;\n    this.userDataService = userDataService;\n    this.answers = [];\n    this.test = [];\n    this.isSubmited = false;\n    this.currentanswers = [];\n  }\n  isAnswered(index) {\n    if (this.currentanswers.find(a => a.qu == index) == undefined) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  choose(index, answerId) {\n    if (this.currentanswers.find(a => a.qu == index) == undefined) {\n      //qu is not found\n      this.currentanswers.push({\n        qu: index,\n        ans: answerId\n      });\n    } else {\n      this.currentanswers.forEach(a => {\n        if (a.qu == index) {\n          a.ans = answerId;\n        }\n      });\n    }\n    console.log(this.currentanswers);\n  }\n  //getTest    //subtrack id/////////////////////////////////here////\n  getTest(subtrackId) {\n    this.testService.getTest(subtrackId).subscribe(response => {\n      this.test = response.test;\n      console.log(this.test);\n    });\n  }\n  //verifiedSubtracks\n  getVerifiedSubtracks() {\n    this.testService.getVerifiedSubtracks(this.userDataService.id()).subscribe(response => {\n      console.log(response);\n      this.verifiedSubtracks = response.data;\n    });\n  }\n  //unVerifiedSubtracks\n  getUnverifiedSubtracks() {\n    this.testService.getUnverifiedSubtracks(this.userDataService.id()).subscribe(response => {\n      console.log(response);\n      this.unVerifiedSubtracks = response.data;\n    });\n  }\n  //send Answers\n  sendAnswers() {\n    this.isSubmited = true;\n    this.answers = this.currentanswers.map(a => a.ans);\n    if (this.answers.length < this.test.length) {\n      return;\n    } else {\n      // console.log(this.answers)\n      this.testService.sendAnswer(this.answers).subscribe(response => {\n        console.log(response);\n        this.swalAlert(Math.round(response.percentage));\n      });\n    }\n  }\n  // timer\n  ngOnInit() {\n    this.getUnverifiedSubtracks();\n    this.getVerifiedSubtracks();\n    this.getTest(2);\n    //\n  }\n  ////////////////////\n  swalAlert(score) {\n    Swal.fire({\n      title: `your score is ${score}%`,\n      width: 600,\n      padding: \"3em\",\n      color: \"#716add\",\n      background: \"#fff \",\n      backdrop: `\n      rgba(0,0,123,0.4)\n      url(\"/images/nyan-cat.gif\")\n      left top\n      no-repeat\n    `\n    });\n  }\n}\nTestComponent.ɵfac = function TestComponent_Factory(t) {\n  return new (t || TestComponent)(i0.ɵɵdirectiveInject(i1.TestService), i0.ɵɵdirectiveInject(i2.UserDataService));\n};\nTestComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TestComponent,\n  selectors: [[\"app-test\"]],\n  decls: 15,\n  vars: 3,\n  consts: [[1, \"container\", \"mt-5\"], [1, \"d-flex\", \"justify-content-center\", \"row\"], [1, \"col-md-10\", \"col-lg-10\"], [1, \"border\"], [1, \"question\", \"bg-white\", \"p-3\", \"border-bottom\"], [1, \"d-flex\", \"flex-row\", \"justify-content-between\", \"align-items-center\", \"mcq\"], [3, \"config\"], [\"cd\", \"\"], [\"class\", \"question bg-white p-3 border-bottom\", 4, \"ngFor\", \"ngForOf\"], [1, \"p-3\", \"justify-content-end\", \"d-flex\"], [1, \"btn\", \"px-4\", \"py-2\", 3, \"click\"], [1, \"d-flex\", \"flex-row\", \"align-items-center\", \"question-title\"], [1, \"text-danger\"], [1, \"mt-1\", \"ml-2\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [\"class\", \"ans ml-2\", 4, \"ngFor\", \"ngForOf\"], [1, \"ans\", \"ml-2\"], [1, \"radio\"], [\"type\", \"radio\", 3, \"name\", \"value\", \"change\"]],\n  template: function TestComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"h4\");\n      i0.ɵɵtext(7, \"MCQ Quiz\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"span\")(9, \"countdown\", 6, 7);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(11, TestComponent_div_11_Template, 8, 4, \"div\", 8);\n      i0.ɵɵelementStart(12, \"div\", 9)(13, \"button\", 10);\n      i0.ɵɵlistener(\"click\", function TestComponent_Template_button_click_13_listener() {\n        return ctx.sendAnswers();\n      });\n      i0.ɵɵtext(14, \"Submit\");\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"config\", i0.ɵɵpureFunction0(2, _c0));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.test);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i4.CountdownComponent],\n  styles: [\"body[_ngcontent-%COMP%]{\\r\\n    background-color:#eee;\\r\\n}\\r\\n\\r\\nlabel.radio[_ngcontent-%COMP%] {\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\nlabel.radio[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\r\\n  position: absolute;\\r\\n  top: 0; \\r\\n  left: 0;\\r\\n  visibility: hidden;\\r\\n  pointer-events: none;\\r\\n}\\r\\n\\r\\nlabel.radio[_ngcontent-%COMP%]   span[_ngcontent-%COMP%] {\\r\\n  padding: 4px 0px;\\r\\n  border: 1px solid var(--main-color);\\r\\n  display: inline-block;\\r\\n  color: var(--main-color);\\r\\n  width: 100px;\\r\\n  text-align: center;\\r\\n  border-radius: 3px;\\r\\n  margin-top: 7px;\\r\\n  text-transform: uppercase;\\r\\n}\\r\\n\\r\\n\\r\\nlabel.radio[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:checked    + span[_ngcontent-%COMP%] {\\r\\n    border-color: var(--main-color);\\r\\n    background-color: var(--main-color);\\r\\n    color: #fff;\\r\\n  }\\r\\n\\r\\n\\r\\n.ans[_ngcontent-%COMP%] {\\r\\n  margin-left: 36px !important;\\r\\n}\\r\\n\\r\\n.btn[_ngcontent-%COMP%]:focus {\\r\\n  outline: 0 !important;\\r\\n  box-shadow: none !important;\\r\\n}\\r\\n\\r\\n.btn[_ngcontent-%COMP%]:active {\\r\\n  outline: 0 !important;\\r\\n  box-shadow: none !important;\\r\\n}\\r\\n\\r\\n\\r\\n .text-q[_ngcontent-%COMP%]{\\r\\n    color: var(--main-color);\\r\\n }\\r\\n\\r\\n .btn[_ngcontent-%COMP%]{\\r\\n  background-color: var(--main-color);\\r\\n  color: #fff;\\r\\n }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdGVzdC90ZXN0L3Rlc3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLHFCQUFxQjtBQUN6Qjs7QUFFQTtFQUNFLGVBQWU7QUFDakI7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsTUFBTTtFQUNOLE9BQU87RUFDUCxrQkFBa0I7RUFDbEIsb0JBQW9CO0FBQ3RCOztBQUVBO0VBQ0UsZ0JBQWdCO0VBQ2hCLG1DQUFtQztFQUNuQyxxQkFBcUI7RUFDckIsd0JBQXdCO0VBQ3hCLFlBQVk7RUFDWixrQkFBa0I7RUFDbEIsa0JBQWtCO0VBQ2xCLGVBQWU7RUFDZix5QkFBeUI7QUFDM0I7OztBQUdBO0lBQ0ksK0JBQStCO0lBQy9CLG1DQUFtQztJQUNuQyxXQUFXO0VBQ2I7OztBQUdGO0VBQ0UsNEJBQTRCO0FBQzlCOztBQUVBO0VBQ0UscUJBQXFCO0VBQ3JCLDJCQUEyQjtBQUM3Qjs7QUFFQTtFQUNFLHFCQUFxQjtFQUNyQiwyQkFBMkI7QUFDN0I7OztDQUdDO0lBQ0csd0JBQXdCO0NBQzNCOztDQUVBO0VBQ0MsbUNBQW1DO0VBQ25DLFdBQVc7Q0FDWiIsInNvdXJjZXNDb250ZW50IjpbImJvZHl7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiNlZWU7XHJcbn1cclxuXHJcbmxhYmVsLnJhZGlvIHtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbn1cclxuXHJcbmxhYmVsLnJhZGlvIGlucHV0IHtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgdG9wOiAwOyBcclxuICBsZWZ0OiAwO1xyXG4gIHZpc2liaWxpdHk6IGhpZGRlbjtcclxuICBwb2ludGVyLWV2ZW50czogbm9uZTtcclxufVxyXG5cclxubGFiZWwucmFkaW8gc3BhbiB7XHJcbiAgcGFkZGluZzogNHB4IDBweDtcclxuICBib3JkZXI6IDFweCBzb2xpZCB2YXIoLS1tYWluLWNvbG9yKTtcclxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgY29sb3I6IHZhcigtLW1haW4tY29sb3IpO1xyXG4gIHdpZHRoOiAxMDBweDtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgYm9yZGVyLXJhZGl1czogM3B4O1xyXG4gIG1hcmdpbi10b3A6IDdweDtcclxuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG59XHJcblxyXG5cclxubGFiZWwucmFkaW8gaW5wdXQ6Y2hlY2tlZCArIHNwYW4ge1xyXG4gICAgYm9yZGVyLWNvbG9yOiB2YXIoLS1tYWluLWNvbG9yKTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLW1haW4tY29sb3IpO1xyXG4gICAgY29sb3I6ICNmZmY7XHJcbiAgfVxyXG5cclxuXHJcbi5hbnMge1xyXG4gIG1hcmdpbi1sZWZ0OiAzNnB4ICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5idG46Zm9jdXMge1xyXG4gIG91dGxpbmU6IDAgIWltcG9ydGFudDtcclxuICBib3gtc2hhZG93OiBub25lICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5idG46YWN0aXZlIHtcclxuICBvdXRsaW5lOiAwICFpbXBvcnRhbnQ7XHJcbiAgYm94LXNoYWRvdzogbm9uZSAhaW1wb3J0YW50O1xyXG59XHJcblxyXG5cclxuIC50ZXh0LXF7XHJcbiAgICBjb2xvcjogdmFyKC0tbWFpbi1jb2xvcik7XHJcbiB9XHJcblxyXG4gLmJ0bntcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1tYWluLWNvbG9yKTtcclxuICBjb2xvcjogI2ZmZjtcclxuIH0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["Swal","i0","TestComponent","constructor","testService","userDataService","isAnswered","index","currentanswers","find","a","qu","undefined","choose","answerId","push","ans","forEach","console","log","getTest","subtrackId","subscribe","response","test","getVerifiedSubtracks","id","verifiedSubtracks","data","getUnverifiedSubtracks","unVerifiedSubtracks","sendAnswers","isSubmited","answers","map","length","sendAnswer","swalAlert","Math","round","percentage","ngOnInit","score","fire","title","width","padding","color","background","backdrop","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\lenovo\\Desktop\\new\\Final-Project-Front-End\\src\\app\\test\\test\\test.component.ts","C:\\Users\\lenovo\\Desktop\\new\\Final-Project-Front-End\\src\\app\\test\\test\\test.component.html"],"sourcesContent":["import { Component, OnInit } from \"@angular/core\";\r\nimport { interval } from \"rxjs\";\r\nimport { UserDataService } from \"src/app/services/user-data.service\";\r\nimport Swal from \"sweetalert2\";\r\nimport { Question } from \"../classes/exam\";\r\nimport { TestService } from \"../services/test.service\";\r\n\r\n@Component({\r\n  selector: \"app-test\",\r\n  templateUrl: \"./test.component.html\",\r\n  styleUrls: [\"./test.component.css\"],\r\n})\r\nexport class TestComponent implements OnInit {\r\n  answers: number[] = [];\r\n  test: Question[] = [];\r\nisSubmited :boolean= false\r\n  verifiedSubtracks: any;\r\n  unVerifiedSubtracks: any;\r\n  currentanswers: { qu: number; ans: number }[] = [];\r\n  constructor(\r\n    private testService: TestService,\r\n    private userDataService: UserDataService\r\n  ) {}\r\n  isAnswered(index: number): boolean {\r\n    if (this.currentanswers.find((a) => a.qu == index) == undefined) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n  choose(index: number, answerId: number) {\r\n    if (this.currentanswers.find((a) => a.qu == index) == undefined) {\r\n      //qu is not found\r\n      this.currentanswers.push({ qu: index, ans: answerId });\r\n    } else {\r\n      this.currentanswers.forEach((a) => {\r\n        if (a.qu == index) {\r\n          a.ans = answerId;\r\n        }\r\n      });\r\n    }\r\n    console.log(this.currentanswers);\r\n  }\r\n\r\n  //getTest    //subtrack id/////////////////////////////////here////\r\n  getTest(subtrackId: number) {\r\n    this.testService.getTest(subtrackId).subscribe((response) => {\r\n      this.test = response.test;\r\n      console.log(this.test);\r\n    });\r\n  }\r\n\r\n  //verifiedSubtracks\r\n  getVerifiedSubtracks() {\r\n    this.testService\r\n      .getVerifiedSubtracks(this.userDataService.id())\r\n      .subscribe((response) => {\r\n        console.log(response);\r\n        this.verifiedSubtracks = response.data;\r\n      });\r\n  }\r\n\r\n  //unVerifiedSubtracks\r\n  getUnverifiedSubtracks() {\r\n    this.testService\r\n      .getUnverifiedSubtracks(this.userDataService.id())\r\n      .subscribe((response) => {\r\n        console.log(response);\r\n        this.unVerifiedSubtracks = response.data;\r\n      });\r\n  }\r\n\r\n  //send Answers\r\n  sendAnswers() {\r\n    this.isSubmited = true\r\n    this.answers = this.currentanswers.map((a) => a.ans);\r\n    if (this.answers.length < this.test.length) {\r\n      return;\r\n    } else {\r\n      // console.log(this.answers)\r\n      this.testService.sendAnswer(this.answers).subscribe((response) => {\r\n        console.log(response);\r\n        this.swalAlert(Math.round(response.percentage));\r\n      });\r\n    }\r\n  }\r\n\r\n  // timer\r\n\r\n  ngOnInit(): void {\r\n    this.getUnverifiedSubtracks();\r\n    this.getVerifiedSubtracks();\r\n    this.getTest(2);\r\n    //\r\n  }\r\n  ////////////////////\r\n\r\n  swalAlert(score: any) {\r\n    Swal.fire({\r\n      title: `your score is ${score}%`,\r\n      width: 600,\r\n      padding: \"3em\",\r\n      color: \"#716add\",\r\n      background: \"#fff \",\r\n      backdrop: `\r\n      rgba(0,0,123,0.4)\r\n      url(\"/images/nyan-cat.gif\")\r\n      left top\r\n      no-repeat\r\n    `,\r\n    });\r\n  }\r\n}\r\n","\r\n\r\n\r\n\r\n\r\n\r\n<div class=\"container mt-5\">\r\n    <div class=\"d-flex justify-content-center row\">\r\n        <div class=\"col-md-10 col-lg-10\">\r\n            <div class=\"border\">\r\n                <div class=\"question bg-white p-3 border-bottom\">\r\n                    <div class=\"d-flex flex-row justify-content-between align-items-center mcq\">\r\n                        <h4>MCQ Quiz</h4><span></span>\r\n                        <countdown #cd [config]=\"{leftTime:1800}\" ></countdown>\r\n                    </div>\r\n                </div>\r\n                <div class=\"question bg-white p-3 border-bottom\"   *ngFor=\"let question of test; let i=index\">\r\n                    <div class=\"d-flex flex-row align-items-center question-title\">\r\n                        <span class=\"text-danger\">Q.{{i+1}} </span>\r\n                        <h5 class=\"mt-1 ml-2\">{{question.body}}?</h5>\r\n                        \r\n        \r\n                    </div>\r\n                    <span *ngIf=\"isAnswered(i) && isSubmited\" class=\"text-danger\"> *You Must answer this Question</span>\r\n                    <div class=\"ans ml-2\" *ngFor=\"let answer of question.answers ; let ii=index\">\r\n                        <label class=\"radio\"> <input type=\"radio\" name=\"{{i}}\" value=\"{{answer.id}}\" (change)=\"choose(i,answer.id)\" > <span>{{answer.body}}</span>\r\n                        </label>\r\n                    </div>\r\n                    \r\n                </div>\r\n\r\n                <div class=\"p-3  justify-content-end d-flex \">\r\n                    <button (click)=\"sendAnswers()\" class=\"btn px-4  py-2\">Submit</button>\r\n                </div>\r\n                \r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<!-- \r\n\r\n<div class=\"container\">\r\n    <div *ngFor=\"let question of currentExam.questions; let i=index\" >\r\n  \r\n      <div class=\"question bg-white p-3 border-bottom\">\r\n        <div class=\"d-flex flex-row  question-title align-items-center\">\r\n          <h3 class=\"text-danger\">Q. {{question.id}}</h3>\r\n          <h5 class=\"mt-1 ml-2\">{{question.text}}</h5>\r\n  \r\n        </div>\r\n  \r\n            \r\n        <div  >\r\n          <div class=\"ans ml-2\"  *ngFor=\"let answer of question.options ; let i=index\">\r\n            <label class=\"radio\">\r\n              <span>{{answer.text}}</span>\r\n            </label>\r\n            <input type=\"radio\" name=\"{{answer.id}}\" value=\"{{answer.id}}\" (change)=\"choose(question.id,answer.id)\" >\r\n          </div>\r\n  \r\n  \r\n      </div>\r\n  </div> -->"]},"metadata":{},"sourceType":"module","externalDependencies":[]}