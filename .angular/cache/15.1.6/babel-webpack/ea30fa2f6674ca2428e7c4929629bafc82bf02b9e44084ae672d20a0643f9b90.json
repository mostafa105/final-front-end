{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, LOCALE_ID, Inject, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, Output, NgModule } from '@angular/core';\nimport * as i3 from '@angular/common';\nimport { formatDate, CommonModule } from '@angular/common';\nfunction CountdownComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"span\", 2);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"innerHTML\", ctx_r0.i.text, i0.ɵɵsanitizeHtml);\n  }\n}\nfunction CountdownComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    $implicit: a0\n  };\n};\nvar CountdownStatus;\n(function (CountdownStatus) {\n  CountdownStatus[CountdownStatus[\"ing\"] = 0] = \"ing\";\n  CountdownStatus[CountdownStatus[\"pause\"] = 1] = \"pause\";\n  CountdownStatus[CountdownStatus[\"stop\"] = 2] = \"stop\";\n  CountdownStatus[CountdownStatus[\"done\"] = 3] = \"done\";\n})(CountdownStatus || (CountdownStatus = {}));\nclass CountdownTimer {\n  constructor(ngZone) {\n    this.ngZone = ngZone;\n    this.fns = [];\n    this.commands = [];\n    this.nextTime = 0;\n    this.ing = false;\n  }\n  start() {\n    if (this.ing === true) {\n      return;\n    }\n    this.ing = true;\n    this.nextTime = +new Date();\n    this.ngZone.runOutsideAngular(() => {\n      this.process();\n    });\n  }\n  process() {\n    while (this.commands.length) {\n      this.commands.shift()();\n    }\n    let diff = +new Date() - this.nextTime;\n    const count = 1 + Math.floor(diff / 100);\n    diff = 100 - diff % 100;\n    this.nextTime += 100 * count;\n    for (let i = 0, len = this.fns.length; i < len; i += 2) {\n      let frequency = this.fns[i + 1];\n      // 100/s\n      if (0 === frequency) {\n        this.fns[i](count);\n        // 1000/s\n      } else {\n        // 先把末位至0，再每次加2\n        frequency += 2 * count - 1;\n        const step = Math.floor(frequency / 20);\n        if (step > 0) {\n          this.fns[i](step);\n        }\n        // 把末位还原成1\n        this.fns[i + 1] = frequency % 20 + 1;\n      }\n    }\n    if (!this.ing) {\n      return;\n    }\n    setTimeout(() => this.process(), diff);\n  }\n  add(fn, frequency) {\n    this.commands.push(() => {\n      this.fns.push(fn);\n      this.fns.push(frequency === 1000 ? 1 : 0);\n      this.ing = true;\n    });\n    return this;\n  }\n  remove(fn) {\n    this.commands.push(() => {\n      const i = this.fns.indexOf(fn);\n      if (i !== -1) {\n        this.fns.splice(i, 2);\n      }\n      this.ing = this.fns.length > 0;\n    });\n    return this;\n  }\n}\nCountdownTimer.ɵfac = function CountdownTimer_Factory(t) {\n  return new (t || CountdownTimer)(i0.ɵɵinject(i0.NgZone));\n};\nCountdownTimer.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: CountdownTimer,\n  factory: CountdownTimer.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CountdownTimer, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i0.NgZone\n    }];\n  }, null);\n})();\n\n// tslint:disable: no-inferrable-types\nclass CountdownGlobalConfig {\n  constructor(locale) {\n    this.locale = locale;\n    this.demand = false;\n    this.leftTime = 0;\n    this.format = 'HH:mm:ss';\n    this.timezone = '+0000';\n    this.formatDate = ({\n      date,\n      formatStr,\n      timezone\n    }) => {\n      return formatDate(new Date(date), formatStr, this.locale, timezone || this.timezone || '+0000');\n    };\n  }\n}\nCountdownGlobalConfig.ɵfac = function CountdownGlobalConfig_Factory(t) {\n  return new (t || CountdownGlobalConfig)(i0.ɵɵinject(LOCALE_ID));\n};\nCountdownGlobalConfig.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: CountdownGlobalConfig,\n  factory: CountdownGlobalConfig.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CountdownGlobalConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [LOCALE_ID]\n      }]\n    }];\n  }, null);\n})();\nclass CountdownComponent {\n  constructor(locale, timer, defCog, cdr, ngZone) {\n    this.locale = locale;\n    this.timer = timer;\n    this.defCog = defCog;\n    this.cdr = cdr;\n    this.ngZone = ngZone;\n    this.frequency = 1000;\n    this._notify = {};\n    this.status = CountdownStatus.ing;\n    this.isDestroy = false;\n    this.i = {};\n    this.left = 0;\n    this.event = new EventEmitter();\n  }\n  set config(i) {\n    if (i.notify != null && !Array.isArray(i.notify) && i.notify > 0) {\n      i.notify = [i.notify];\n    }\n    this._config = i;\n  }\n  get config() {\n    return this._config;\n  }\n  /**\r\n   * Start countdown, you must manually call when `demand: false`\r\n   */\n  begin() {\n    this.status = CountdownStatus.ing;\n    this.callEvent('start');\n  }\n  /**\r\n   * Restart countdown\r\n   */\n  restart() {\n    if (this.status !== CountdownStatus.stop) {\n      this.destroy();\n    }\n    this.init();\n    this.callEvent('restart');\n  }\n  /**\r\n   * Stop countdown, must call `restart` when stopped, it's different from pause, unable to recover\r\n   */\n  stop() {\n    if (this.status === CountdownStatus.stop) {\n      return;\n    }\n    this.status = CountdownStatus.stop;\n    this.destroy();\n    this.callEvent('stop');\n  }\n  /**\r\n   * Pause countdown, you can use `resume` to recover again\r\n   */\n  pause() {\n    if (this.status === CountdownStatus.stop || this.status === CountdownStatus.pause) {\n      return;\n    }\n    this.status = CountdownStatus.pause;\n    this.callEvent('pause');\n  }\n  /**\r\n   * Resume countdown\r\n   */\n  resume() {\n    if (this.status === CountdownStatus.stop || this.status !== CountdownStatus.pause) {\n      return;\n    }\n    this.status = CountdownStatus.ing;\n    this.callEvent('resume');\n  }\n  callEvent(action) {\n    this.event.emit({\n      action,\n      left: this.left,\n      status: this.status,\n      text: this.i.text\n    });\n  }\n  init() {\n    const {\n      locale,\n      defCog\n    } = this;\n    const config = this.config = {\n      ...new CountdownGlobalConfig(locale),\n      ...defCog,\n      ...this.config\n    };\n    // tslint:disable-next-line: no-bitwise\n    const frq = this.frequency = ~config.format.indexOf('S') ? 100 : 1000;\n    this.status = config.demand ? CountdownStatus.pause : CountdownStatus.ing;\n    this.getLeft();\n    // bind reflow to me\n    const _reflow = this.reflow;\n    this.reflow = (count = 0, force = false) => _reflow.apply(this, [count, force]);\n    if (Array.isArray(config.notify)) {\n      config.notify.forEach(time => {\n        if (time < 1) {\n          throw new Error(`The notify config must be a positive integer.`);\n        }\n        time = time * 1000;\n        time = time - time % frq;\n        this._notify[time] = true;\n      });\n    }\n    this.timer.add(this.reflow, frq).start();\n    this.reflow(0, true);\n  }\n  destroy() {\n    this.timer.remove(this.reflow);\n    return this;\n  }\n  /**\r\n   * 更新时钟\r\n   */\n  reflow(count = 0, force = false) {\n    if (this.isDestroy) {\n      return;\n    }\n    const {\n      status,\n      config,\n      _notify\n    } = this;\n    if (!force && status !== CountdownStatus.ing) {\n      return;\n    }\n    let value = this.left = this.left - this.frequency * count;\n    if (value < 1) {\n      value = 0;\n    }\n    this.i = {\n      value,\n      text: config.formatDate({\n        date: value,\n        formatStr: config.format,\n        timezone: config.timezone\n      })\n    };\n    if (typeof config.prettyText === 'function') {\n      this.i.text = config.prettyText(this.i.text);\n    }\n    this.cdr.detectChanges();\n    if (config.notify === 0 || _notify[value]) {\n      this.ngZone.run(() => {\n        this.callEvent('notify');\n      });\n    }\n    if (value === 0) {\n      this.ngZone.run(() => {\n        this.status = CountdownStatus.done;\n        this.destroy();\n        this.callEvent('done');\n      });\n    }\n  }\n  /**\r\n   * 获取倒计时剩余帧数\r\n   */\n  getLeft() {\n    const {\n      config,\n      frequency\n    } = this;\n    let left = config.leftTime * 1000;\n    const end = config.stopTime;\n    if (!left && end) {\n      left = end - new Date().getTime();\n    }\n    this.left = left - left % frequency;\n  }\n  ngOnInit() {\n    this.init();\n    if (!this.config.demand) {\n      this.begin();\n    }\n  }\n  ngOnDestroy() {\n    this.isDestroy = true;\n    this.destroy();\n  }\n  ngOnChanges(changes) {\n    if (!changes.config.firstChange) {\n      this.restart();\n    }\n  }\n}\nCountdownComponent.ɵfac = function CountdownComponent_Factory(t) {\n  return new (t || CountdownComponent)(i0.ɵɵdirectiveInject(LOCALE_ID), i0.ɵɵdirectiveInject(CountdownTimer), i0.ɵɵdirectiveInject(CountdownGlobalConfig), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.NgZone));\n};\nCountdownComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: CountdownComponent,\n  selectors: [[\"countdown\"]],\n  hostVars: 2,\n  hostBindings: function CountdownComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"count-down\", true);\n    }\n  },\n  inputs: {\n    config: \"config\",\n    render: \"render\"\n  },\n  outputs: {\n    event: \"event\"\n  },\n  standalone: true,\n  features: [i0.ɵɵProvidersFeature([CountdownTimer]), i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n  decls: 2,\n  vars: 5,\n  consts: [[4, \"ngIf\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [3, \"innerHTML\"]],\n  template: function CountdownComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, CountdownComponent_ng_container_0_Template, 2, 1, \"ng-container\", 0);\n      i0.ɵɵtemplate(1, CountdownComponent_ng_container_1_Template, 1, 0, \"ng-container\", 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", !ctx.render);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.render)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(3, _c0, ctx.i));\n    }\n  },\n  dependencies: [CommonModule, i3.NgIf, i3.NgTemplateOutlet],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CountdownComponent, [{\n    type: Component,\n    args: [{\n      selector: 'countdown',\n      template: `\n    <ng-container *ngIf=\"!render\">\n      <span [innerHTML]=\"i.text\"></span>\n    </ng-container>\n    <ng-container *ngTemplateOutlet=\"render; context: { $implicit: i }\"></ng-container>\n  `,\n      host: {\n        '[class.count-down]': 'true'\n      },\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      imports: [CommonModule],\n      providers: [CountdownTimer],\n      standalone: true\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [LOCALE_ID]\n      }]\n    }, {\n      type: CountdownTimer\n    }, {\n      type: CountdownGlobalConfig\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    config: [{\n      type: Input\n    }],\n    render: [{\n      type: Input\n    }],\n    event: [{\n      type: Output\n    }]\n  });\n})();\nclass CountdownModule {}\nCountdownModule.ɵfac = function CountdownModule_Factory(t) {\n  return new (t || CountdownModule)();\n};\nCountdownModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: CountdownModule\n});\nCountdownModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [CountdownComponent]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CountdownModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CountdownComponent],\n      exports: [CountdownComponent]\n    }]\n  }], null, null);\n})();\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { CountdownComponent, CountdownGlobalConfig, CountdownModule, CountdownStatus, CountdownTimer };\n\n//# sourceMappingURL=ngx-countdown.mjs.map","map":{"version":3,"names":["i0","Injectable","LOCALE_ID","Inject","EventEmitter","Component","ViewEncapsulation","ChangeDetectionStrategy","Input","Output","NgModule","i3","formatDate","CommonModule","CountdownStatus","CountdownTimer","constructor","ngZone","fns","commands","nextTime","ing","start","Date","runOutsideAngular","process","length","shift","diff","count","Math","floor","i","len","frequency","step","setTimeout","add","fn","push","remove","indexOf","splice","ɵfac","NgZone","ɵprov","type","CountdownGlobalConfig","locale","demand","leftTime","format","timezone","date","formatStr","args","providedIn","undefined","decorators","CountdownComponent","timer","defCog","cdr","_notify","status","isDestroy","left","event","config","notify","Array","isArray","_config","begin","callEvent","restart","stop","destroy","init","pause","resume","action","emit","text","frq","getLeft","_reflow","reflow","force","apply","forEach","time","Error","value","prettyText","detectChanges","run","done","end","stopTime","getTime","ngOnInit","ngOnDestroy","ngOnChanges","changes","firstChange","ChangeDetectorRef","ɵcmp","NgIf","NgTemplateOutlet","selector","template","host","encapsulation","None","changeDetection","OnPush","imports","providers","standalone","render","CountdownModule","ɵmod","ɵinj","exports"],"sources":["C:/Users/lenovo/Desktop/new/Final-Project-Front-End/node_modules/ngx-countdown/fesm2020/ngx-countdown.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\r\nimport { Injectable, LOCALE_ID, Inject, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, Output, NgModule } from '@angular/core';\r\nimport * as i3 from '@angular/common';\r\nimport { formatDate, CommonModule } from '@angular/common';\r\n\r\nvar CountdownStatus;\r\n(function (CountdownStatus) {\r\n    CountdownStatus[CountdownStatus[\"ing\"] = 0] = \"ing\";\r\n    CountdownStatus[CountdownStatus[\"pause\"] = 1] = \"pause\";\r\n    CountdownStatus[CountdownStatus[\"stop\"] = 2] = \"stop\";\r\n    CountdownStatus[CountdownStatus[\"done\"] = 3] = \"done\";\r\n})(CountdownStatus || (CountdownStatus = {}));\r\n\r\nclass CountdownTimer {\r\n    constructor(ngZone) {\r\n        this.ngZone = ngZone;\r\n        this.fns = [];\r\n        this.commands = [];\r\n        this.nextTime = 0;\r\n        this.ing = false;\r\n    }\r\n    start() {\r\n        if (this.ing === true) {\r\n            return;\r\n        }\r\n        this.ing = true;\r\n        this.nextTime = +new Date();\r\n        this.ngZone.runOutsideAngular(() => {\r\n            this.process();\r\n        });\r\n    }\r\n    process() {\r\n        while (this.commands.length) {\r\n            this.commands.shift()();\r\n        }\r\n        let diff = +new Date() - this.nextTime;\r\n        const count = 1 + Math.floor(diff / 100);\r\n        diff = 100 - (diff % 100);\r\n        this.nextTime += 100 * count;\r\n        for (let i = 0, len = this.fns.length; i < len; i += 2) {\r\n            let frequency = this.fns[i + 1];\r\n            // 100/s\r\n            if (0 === frequency) {\r\n                this.fns[i](count);\r\n                // 1000/s\r\n            }\r\n            else {\r\n                // 先把末位至0，再每次加2\r\n                frequency += 2 * count - 1;\r\n                const step = Math.floor(frequency / 20);\r\n                if (step > 0) {\r\n                    this.fns[i](step);\r\n                }\r\n                // 把末位还原成1\r\n                this.fns[i + 1] = (frequency % 20) + 1;\r\n            }\r\n        }\r\n        if (!this.ing) {\r\n            return;\r\n        }\r\n        setTimeout(() => this.process(), diff);\r\n    }\r\n    add(fn, frequency) {\r\n        this.commands.push(() => {\r\n            this.fns.push(fn);\r\n            this.fns.push(frequency === 1000 ? 1 : 0);\r\n            this.ing = true;\r\n        });\r\n        return this;\r\n    }\r\n    remove(fn) {\r\n        this.commands.push(() => {\r\n            const i = this.fns.indexOf(fn);\r\n            if (i !== -1) {\r\n                this.fns.splice(i, 2);\r\n            }\r\n            this.ing = this.fns.length > 0;\r\n        });\r\n        return this;\r\n    }\r\n}\r\nCountdownTimer.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CountdownTimer, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Injectable });\r\nCountdownTimer.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CountdownTimer });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CountdownTimer, decorators: [{\r\n            type: Injectable\r\n        }], ctorParameters: function () { return [{ type: i0.NgZone }]; } });\r\n\r\n// tslint:disable: no-inferrable-types\r\nclass CountdownGlobalConfig {\r\n    constructor(locale) {\r\n        this.locale = locale;\r\n        this.demand = false;\r\n        this.leftTime = 0;\r\n        this.format = 'HH:mm:ss';\r\n        this.timezone = '+0000';\r\n        this.formatDate = ({ date, formatStr, timezone }) => {\r\n            return formatDate(new Date(date), formatStr, this.locale, timezone || this.timezone || '+0000');\r\n        };\r\n    }\r\n}\r\nCountdownGlobalConfig.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CountdownGlobalConfig, deps: [{ token: LOCALE_ID }], target: i0.ɵɵFactoryTarget.Injectable });\r\nCountdownGlobalConfig.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CountdownGlobalConfig, providedIn: 'root' });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CountdownGlobalConfig, decorators: [{\r\n            type: Injectable,\r\n            args: [{ providedIn: 'root' }]\r\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\r\n                    type: Inject,\r\n                    args: [LOCALE_ID]\r\n                }] }]; } });\r\n\r\nclass CountdownComponent {\r\n    constructor(locale, timer, defCog, cdr, ngZone) {\r\n        this.locale = locale;\r\n        this.timer = timer;\r\n        this.defCog = defCog;\r\n        this.cdr = cdr;\r\n        this.ngZone = ngZone;\r\n        this.frequency = 1000;\r\n        this._notify = {};\r\n        this.status = CountdownStatus.ing;\r\n        this.isDestroy = false;\r\n        this.i = {};\r\n        this.left = 0;\r\n        this.event = new EventEmitter();\r\n    }\r\n    set config(i) {\r\n        if (i.notify != null && !Array.isArray(i.notify) && i.notify > 0) {\r\n            i.notify = [i.notify];\r\n        }\r\n        this._config = i;\r\n    }\r\n    get config() {\r\n        return this._config;\r\n    }\r\n    /**\r\n     * Start countdown, you must manually call when `demand: false`\r\n     */\r\n    begin() {\r\n        this.status = CountdownStatus.ing;\r\n        this.callEvent('start');\r\n    }\r\n    /**\r\n     * Restart countdown\r\n     */\r\n    restart() {\r\n        if (this.status !== CountdownStatus.stop) {\r\n            this.destroy();\r\n        }\r\n        this.init();\r\n        this.callEvent('restart');\r\n    }\r\n    /**\r\n     * Stop countdown, must call `restart` when stopped, it's different from pause, unable to recover\r\n     */\r\n    stop() {\r\n        if (this.status === CountdownStatus.stop) {\r\n            return;\r\n        }\r\n        this.status = CountdownStatus.stop;\r\n        this.destroy();\r\n        this.callEvent('stop');\r\n    }\r\n    /**\r\n     * Pause countdown, you can use `resume` to recover again\r\n     */\r\n    pause() {\r\n        if (this.status === CountdownStatus.stop || this.status === CountdownStatus.pause) {\r\n            return;\r\n        }\r\n        this.status = CountdownStatus.pause;\r\n        this.callEvent('pause');\r\n    }\r\n    /**\r\n     * Resume countdown\r\n     */\r\n    resume() {\r\n        if (this.status === CountdownStatus.stop || this.status !== CountdownStatus.pause) {\r\n            return;\r\n        }\r\n        this.status = CountdownStatus.ing;\r\n        this.callEvent('resume');\r\n    }\r\n    callEvent(action) {\r\n        this.event.emit({ action, left: this.left, status: this.status, text: this.i.text });\r\n    }\r\n    init() {\r\n        const { locale, defCog } = this;\r\n        const config = (this.config = {\r\n            ...new CountdownGlobalConfig(locale),\r\n            ...defCog,\r\n            ...this.config,\r\n        });\r\n        // tslint:disable-next-line: no-bitwise\r\n        const frq = (this.frequency = ~config.format.indexOf('S') ? 100 : 1000);\r\n        this.status = config.demand ? CountdownStatus.pause : CountdownStatus.ing;\r\n        this.getLeft();\r\n        // bind reflow to me\r\n        const _reflow = this.reflow;\r\n        this.reflow = (count = 0, force = false) => _reflow.apply(this, [count, force]);\r\n        if (Array.isArray(config.notify)) {\r\n            config.notify.forEach((time) => {\r\n                if (time < 1) {\r\n                    throw new Error(`The notify config must be a positive integer.`);\r\n                }\r\n                time = time * 1000;\r\n                time = time - (time % frq);\r\n                this._notify[time] = true;\r\n            });\r\n        }\r\n        this.timer.add(this.reflow, frq).start();\r\n        this.reflow(0, true);\r\n    }\r\n    destroy() {\r\n        this.timer.remove(this.reflow);\r\n        return this;\r\n    }\r\n    /**\r\n     * 更新时钟\r\n     */\r\n    reflow(count = 0, force = false) {\r\n        if (this.isDestroy) {\r\n            return;\r\n        }\r\n        const { status, config, _notify } = this;\r\n        if (!force && status !== CountdownStatus.ing) {\r\n            return;\r\n        }\r\n        let value = (this.left = this.left - this.frequency * count);\r\n        if (value < 1) {\r\n            value = 0;\r\n        }\r\n        this.i = {\r\n            value,\r\n            text: config.formatDate({ date: value, formatStr: config.format, timezone: config.timezone }),\r\n        };\r\n        if (typeof config.prettyText === 'function') {\r\n            this.i.text = config.prettyText(this.i.text);\r\n        }\r\n        this.cdr.detectChanges();\r\n        if (config.notify === 0 || _notify[value]) {\r\n            this.ngZone.run(() => {\r\n                this.callEvent('notify');\r\n            });\r\n        }\r\n        if (value === 0) {\r\n            this.ngZone.run(() => {\r\n                this.status = CountdownStatus.done;\r\n                this.destroy();\r\n                this.callEvent('done');\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * 获取倒计时剩余帧数\r\n     */\r\n    getLeft() {\r\n        const { config, frequency } = this;\r\n        let left = config.leftTime * 1000;\r\n        const end = config.stopTime;\r\n        if (!left && end) {\r\n            left = end - new Date().getTime();\r\n        }\r\n        this.left = left - (left % frequency);\r\n    }\r\n    ngOnInit() {\r\n        this.init();\r\n        if (!this.config.demand) {\r\n            this.begin();\r\n        }\r\n    }\r\n    ngOnDestroy() {\r\n        this.isDestroy = true;\r\n        this.destroy();\r\n    }\r\n    ngOnChanges(changes) {\r\n        if (!changes.config.firstChange) {\r\n            this.restart();\r\n        }\r\n    }\r\n}\r\nCountdownComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CountdownComponent, deps: [{ token: LOCALE_ID }, { token: CountdownTimer }, { token: CountdownGlobalConfig }, { token: i0.ChangeDetectorRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\r\nCountdownComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.4\", type: CountdownComponent, isStandalone: true, selector: \"countdown\", inputs: { config: \"config\", render: \"render\" }, outputs: { event: \"event\" }, host: { properties: { \"class.count-down\": \"true\" } }, providers: [CountdownTimer], usesOnChanges: true, ngImport: i0, template: `\r\n    <ng-container *ngIf=\"!render\">\r\n      <span [innerHTML]=\"i.text\"></span>\r\n    </ng-container>\r\n    <ng-container *ngTemplateOutlet=\"render; context: { $implicit: i }\"></ng-container>\r\n  `, isInline: true, dependencies: [{ kind: \"ngmodule\", type: CommonModule }, { kind: \"directive\", type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i3.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CountdownComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'countdown',\r\n                    template: `\r\n    <ng-container *ngIf=\"!render\">\r\n      <span [innerHTML]=\"i.text\"></span>\r\n    </ng-container>\r\n    <ng-container *ngTemplateOutlet=\"render; context: { $implicit: i }\"></ng-container>\r\n  `,\r\n                    host: { '[class.count-down]': 'true' },\r\n                    encapsulation: ViewEncapsulation.None,\r\n                    changeDetection: ChangeDetectionStrategy.OnPush,\r\n                    imports: [CommonModule],\r\n                    providers: [CountdownTimer],\r\n                    standalone: true,\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\r\n                    type: Inject,\r\n                    args: [LOCALE_ID]\r\n                }] }, { type: CountdownTimer }, { type: CountdownGlobalConfig }, { type: i0.ChangeDetectorRef }, { type: i0.NgZone }]; }, propDecorators: { config: [{\r\n                type: Input\r\n            }], render: [{\r\n                type: Input\r\n            }], event: [{\r\n                type: Output\r\n            }] } });\r\n\r\nclass CountdownModule {\r\n}\r\nCountdownModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CountdownModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\nCountdownModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.0.4\", ngImport: i0, type: CountdownModule, imports: [CountdownComponent], exports: [CountdownComponent] });\r\nCountdownModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CountdownModule, imports: [CountdownComponent] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CountdownModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    imports: [CountdownComponent],\r\n                    exports: [CountdownComponent],\r\n                }]\r\n        }] });\r\n\r\n/**\r\n * Generated bundle index. Do not edit.\r\n */\r\n\r\nexport { CountdownComponent, CountdownGlobalConfig, CountdownModule, CountdownStatus, CountdownTimer };\r\n\n//# sourceMappingURL=ngx-countdown.mjs.map\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}