{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/service-order.service\";\nimport * as i2 from \"src/app/services/user-data.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"ngx-toastr\";\nimport * as i5 from \"@angular/common\";\nconst _c0 = function (a1) {\n  return [\"/user/service/dashboard\", a1];\n};\nconst _c1 = function (a1) {\n  return [\"/user/service/notifications\", a1];\n};\nfunction ServiceDashboardComponent_tr_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 6)(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\", 20)(10, \"button\", 21);\n    i0.ɵɵtext(11, \"Rescedule\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"button\", 22);\n    i0.ɵɵtext(13, \"Cancel\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"button\", 23);\n    i0.ɵɵtext(15, \"Notifications\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const order_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(order_r3.appointment);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(order_r3.service_name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(order_r3.track_name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(order_r3.status);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(6, _c0, order_r3.id));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(8, _c1, order_r3.id));\n  }\n}\nfunction ServiceDashboardComponent_div_34_small_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 4);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const msg_r5 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(msg_r5.message);\n  }\n}\nfunction ServiceDashboardComponent_div_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵtemplate(1, ServiceDashboardComponent_div_34_small_1_Template, 2, 1, \"small\", 25);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.message);\n  }\n}\nfunction ServiceDashboardComponent_div_35_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 26)(1, \"button\", 27);\n    i0.ɵɵtext(2, \"Close\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 28);\n    i0.ɵɵlistener(\"click\", function ServiceDashboardComponent_div_35_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.deleteUserOrder());\n    });\n    i0.ɵɵtext(4, \"Delete\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class ServiceDashboardComponent {\n  constructor(_SeviceOrder, _OrderService, userData, activatedRoute, toastr) {\n    this._SeviceOrder = _SeviceOrder;\n    this._OrderService = _OrderService;\n    this.userData = userData;\n    this.activatedRoute = activatedRoute;\n    this.toastr = toastr;\n    this.userOrdersList = [];\n    this.message = {};\n    this.id = this.userData.userData().id;\n    this.orderId = this.activatedRoute.snapshot.params[\"id\"];\n  }\n  ngOnInit() {\n    this.getUserOrders();\n    this.deleteUserOrder();\n  }\n  // get user order////////////////////////////////////////////////////////////\n  getUserOrders() {\n    this._OrderService.getUserOrder().subscribe(res => {\n      this.userOrdersList = res.orders;\n      console.log(this.id);\n      console.log(res);\n    });\n  }\n  //////////////////////////////////////////////////////////////////////////////////\n  //delete user order\n  deleteUserOrder() {\n    this._OrderService.deleteOrder(this.orderId).subscribe(res => {\n      console.log(res);\n      this.message = res;\n      // this.ngOnInit();\n      this.toastr.success(\"success\");\n    });\n  }\n}\nServiceDashboardComponent.ɵfac = function ServiceDashboardComponent_Factory(t) {\n  return new (t || ServiceDashboardComponent)(i0.ɵɵdirectiveInject(i1.ServiceOrderService), i0.ɵɵdirectiveInject(i1.ServiceOrderService), i0.ɵɵdirectiveInject(i2.UserDataService), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i4.ToastrService));\n};\nServiceDashboardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ServiceDashboardComponent,\n  selectors: [[\"app-service-dashboard\"]],\n  decls: 36,\n  vars: 3,\n  consts: [[1, \"service-dashboard\"], [1, \"container\"], [1, \"row\"], [1, \"table\", \"table-bordered\", \"shadow\", \"rounded\", \"mb-5\"], [1, \"\"], [\"colspan\", \"4\", 1, \"text-center\"], [1, \"text-center\"], [1, \"p-5\"], [\"class\", \"text-center\", 4, \"ngFor\", \"ngForOf\"], [\"id\", \"deleteModal\", \"tabindex\", \"-1\", \"aria-labelledby\", \"deleteModalLabel\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [1, \"modal-dialog\", \"modal-dialog-centered\"], [1, \"modal-content\"], [1, \"modal-header\"], [\"id\", \"deleteModalLabel\", 1, \"modal-title\", \"fs-5\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"btn-close\"], [1, \"modal-body\"], [1, \"fa-solid\", \"fa-circle-exclamation\", \"text-danger\", \"fs-3\"], [1, \"text-black-50\"], [\"class\", \"alert alert-success mb-2 w-100 text-center\", 4, \"ngIf\"], [\"class\", \"modal-footer\", 4, \"ngFor\", \"ngForOf\"], [1, \"ms-2\"], [1, \"btn\", \"btn-info\", \"m-2\"], [\"data-bs-toggle\", \"modal\", \"data-bs-target\", \"#deleteModal\", 1, \"btn\", \"btn-danger\", \"m-2\", 3, \"routerLink\"], [1, \"btn\", \"btn-success\", \"m-2\", 3, \"routerLink\"], [1, \"alert\", \"alert-success\", \"mb-2\", \"w-100\", \"text-center\"], [\"class\", \" \", 4, \"ngFor\", \"ngForOf\"], [1, \"modal-footer\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", 1, \"btn\", \"confirm-btn\"], [\"type\", \"button\", 1, \"btn\", \"close-btn\", 3, \"click\"]],\n  template: function ServiceDashboardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"section\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"table\", 3)(4, \"thead\")(5, \"tr\", 4)(6, \"th\", 5)(7, \"h4\");\n      i0.ɵɵtext(8, \"UBCOMING SERVICE\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(9, \"tr\", 6)(10, \"th\");\n      i0.ɵɵtext(11, \"Date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"th\");\n      i0.ɵɵtext(13, \"Service\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"th\");\n      i0.ɵɵtext(15, \"Track\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"th\");\n      i0.ɵɵtext(17, \"Status\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"th\");\n      i0.ɵɵtext(19, \"Action\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(20, \"tbody\", 7);\n      i0.ɵɵtemplate(21, ServiceDashboardComponent_tr_21_Template, 16, 10, \"tr\", 8);\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(22, \"div\", 9)(23, \"div\", 10)(24, \"div\", 11)(25, \"div\", 12)(26, \"h1\", 13);\n      i0.ɵɵtext(27, \"Delete order \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(28, \"button\", 14);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(29, \"div\", 15)(30, \"div\", 6);\n      i0.ɵɵelement(31, \"i\", 16);\n      i0.ɵɵelementStart(32, \"p\", 17);\n      i0.ɵɵtext(33, \" Are you sure you want to delete this order ? \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(34, ServiceDashboardComponent_div_34_Template, 2, 1, \"div\", 18);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(35, ServiceDashboardComponent_div_35_Template, 5, 0, \"div\", 19);\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(21);\n      i0.ɵɵproperty(\"ngForOf\", ctx.userOrdersList);\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"ngIf\", ctx.message);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.userOrdersList);\n    }\n  },\n  dependencies: [i5.NgForOf, i5.NgIf, i3.RouterLink],\n  styles: [\"[_ngcontent-%COMP%]:root {\\r\\n    --main-color: rgb(3, 37, 65);\\r\\n    --main-color-alt: #1787e0;\\r\\n    --section-background: #ececec;\\r\\n    --main-transition: 0.3s ease;\\r\\n    --sec-color : #1ed5a9;\\r\\n    \\r\\n  }\\r\\n.service-dashboard[_ngcontent-%COMP%]   table[_ngcontent-%COMP%] {\\r\\n    padding: 2rem !important; \\r\\n    background-color: #fff;\\r\\n}\\r\\n\\r\\nfooter[_ngcontent-%COMP%]{\\r\\n    background:  linear-gradient(45deg , var(--main-color-alt) ,var(--sec-color) );\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdXNlci9zZXJ2aWNlLWRhc2hib2FyZC9zZXJ2aWNlLWRhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQTtJQUNJLDRCQUE0QjtJQUM1Qix5QkFBeUI7SUFDekIsNkJBQTZCO0lBQzdCLDRCQUE0QjtJQUM1QixxQkFBcUI7SUFDckIsWUFBWTtFQUNkO0FBQ0Y7SUFDSSx3QkFBd0I7SUFDeEIsc0JBQXNCO0FBQzFCOztBQUVBO0lBQ0ksOEVBQThFO0FBQ2xGIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbjpyb290IHtcclxuICAgIC0tbWFpbi1jb2xvcjogcmdiKDMsIDM3LCA2NSk7XHJcbiAgICAtLW1haW4tY29sb3ItYWx0OiAjMTc4N2UwO1xyXG4gICAgLS1zZWN0aW9uLWJhY2tncm91bmQ6ICNlY2VjZWM7XHJcbiAgICAtLW1haW4tdHJhbnNpdGlvbjogMC4zcyBlYXNlO1xyXG4gICAgLS1zZWMtY29sb3IgOiAjMWVkNWE5O1xyXG4gICAgLyogIzFlZDVhOSAqL1xyXG4gIH1cclxuLnNlcnZpY2UtZGFzaGJvYXJkIHRhYmxlIHtcclxuICAgIHBhZGRpbmc6IDJyZW0gIWltcG9ydGFudDsgXHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xyXG59XHJcblxyXG5mb290ZXJ7XHJcbiAgICBiYWNrZ3JvdW5kOiAgbGluZWFyLWdyYWRpZW50KDQ1ZGVnICwgdmFyKC0tbWFpbi1jb2xvci1hbHQpICx2YXIoLS1zZWMtY29sb3IpICk7XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","ServiceDashboardComponent","constructor","_SeviceOrder","_OrderService","userData","activatedRoute","toastr","id","snapshot","params","ngOnInit","getUserOrders","deleteUserOrder","getUserOrder","subscribe","res","userOrdersList","orders","console","log","deleteOrder","orderId","message","success","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\lenovo\\Desktop\\new\\Final-Project-Front-End\\src\\app\\user\\service-dashboard\\service-dashboard.component.html","C:\\Users\\lenovo\\Desktop\\new\\Final-Project-Front-End\\src\\app\\user\\service-dashboard\\service-dashboard.component.ts"],"sourcesContent":["<!-- start dashboard section -->\r\n<section class=\"service-dashboard\">\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <table class=\"table table-bordered shadow rounded mb-5  \">\r\n                <thead>\r\n                <tr class=\"\" >\r\n                    \r\n                    <th colspan=\"4\" class=\" text-center\"><h4>UBCOMING SERVICE</h4></th>\r\n                    \r\n                </tr></thead>\r\n              \r\n                <tr class=\"text-center\">\r\n                    <th>Date</th>\r\n                    <th>Service</th>\r\n                    <th>Track</th>\r\n                    <th>Status</th>\r\n                    <th>Action</th>\r\n                </tr>\r\n            \r\n                <tbody class=\"p-5\">\r\n                        <tr class=\"text-center\" *ngFor = \"let order of userOrdersList\">\r\n                          \r\n                            <td>{{order.appointment}}</td>\r\n                            <td>{{order.service_name}}</td>\r\n                            <td>{{order.track_name}}</td>\r\n                            <td>{{order.status}}</td>\r\n                             \r\n                                <td class=\"ms-2\">\r\n                                <button class=\" btn btn-info m-2\">Rescedule</button>\r\n                                <button class=\" btn btn-danger m-2\" data-bs-toggle=\"modal\" data-bs-target=\"#deleteModal\" [routerLink]=\"['/user/service/dashboard' , order.id]\">Cancel</button>\r\n                                <button class=\" btn btn-success m-2\" [routerLink]=\"['/user/service/notifications' , order.id]\">Notifications</button>\r\n                            </td>\r\n\r\n\r\n                    \r\n\r\n             <!-- Modal for delete post ----------------------------------------------------------------->\r\n\r\n     \r\n \r\n                        </tr>\r\n\r\n\r\n\r\n       \r\n                    \r\n            \r\n</tbody>\r\n            </table>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"modal fade\" id=\"deleteModal\" tabindex=\"-1\" aria-labelledby=\"deleteModalLabel\" aria-hidden=\"true\">\r\n        <div class=\"modal-dialog   modal-dialog-centered \">\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n              <h1 class=\"modal-title fs-5\" id=\"deleteModalLabel\" >Delete order </h1>\r\n              <button type=\"button\" class=\"btn-close \" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n            </div>\r\n            <div class=\"modal-body \">\r\n      \r\n              <div class=\"text-center\">\r\n              <i class=\"fa-solid fa-circle-exclamation text-danger fs-3\"></i>\r\n              <p class=\"text-black-50\">\r\n                Are you sure you want to delete this order ?\r\n              </p>\r\n              <div *ngIf = \"message\" class = \"alert alert-success mb-2 w-100 text-center\">\r\n                <small class=\" \" *ngFor = \"let msg of message\">{{msg.message}}</small>\r\n           </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"modal-footer\" *ngFor = \"let order of userOrdersList\">\r\n              <button type=\"button\" class=\"btn confirm-btn\" data-bs-dismiss=\"modal\">Close</button>\r\n              <button  type=\"button\" class=\"btn  close-btn\" (click) = \"deleteUserOrder()\" >Delete</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>            \r\n\r\n</section>\r\n","import { Component  , OnInit} from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { UserDataService } from 'src/app/services/user-data.service';\r\nimport { ServiceOrderService } from '../services/service-order.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-service-dashboard',\r\n  templateUrl: './service-dashboard.component.html',\r\n  styleUrls: ['./service-dashboard.component.css']\r\n})\r\nexport class ServiceDashboardComponent implements OnInit{\r\n \r\n  userOrdersList : any[] = [];\r\n  message :any  = {};\r\n  constructor( private _SeviceOrder: ServiceOrderService , private _OrderService: ServiceOrderService\r\n    ,private userData :UserDataService , private activatedRoute : ActivatedRoute\r\n    , private toastr: ToastrService){\r\n  }\r\n\r\n  id : any = this.userData.userData().id ;\r\n  orderId = this.activatedRoute.snapshot.params[\"id\"];\r\n\r\nngOnInit(): void {\r\n  this.getUserOrders();\r\n  this.deleteUserOrder();\r\n  \r\n}\r\n\r\n// get user order////////////////////////////////////////////////////////////\r\ngetUserOrders(){\r\n  this._OrderService.getUserOrder().subscribe((res)=>{\r\n    this.userOrdersList = res.orders\r\n    console.log(this.id);\r\n    console.log(res );\r\n     \r\n  })\r\n}\r\n//////////////////////////////////////////////////////////////////////////////////\r\n//delete user order\r\ndeleteUserOrder(){\r\n  this._OrderService.deleteOrder(this.orderId).subscribe((res)=>{\r\n    console.log(res);\r\n    this.message = res ;\r\n    // this.ngOnInit();\r\n    this.toastr.success(\"success\")\r\n    \r\n  })\r\n}\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}