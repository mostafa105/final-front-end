{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\n// import { UserDataService } from 'src/app/services/user-data.service';\nexport class PostsService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    // id = this.userData.userData().id ;\n    this.api_key = localStorage.getItem('token');\n    this.headers = new HttpHeaders({\n      'Accept': 'application/json',\n      'Authorization': `Bearer ${this.api_key}`\n    });\n    this.requestOptions = {\n      headers: this.headers\n    };\n  }\n  //set post\n  setPost(formData) {\n    return this.httpClient.post('http://127.0.0.1:8000/api/storePost', formData, this.requestOptions);\n  }\n  //get posts\n  getpostsbyinstrctorid(instructorId) {\n    return this.httpClient.get(`http://127.0.0.1:8000/api/getpostsbyinstrctorid/${instructorId}`);\n  }\n  search(searchpost) {\n    return this.httpClient.get(`http://127.0.0.1:8000/api/searchpost/${searchpost}`);\n  }\n  getPosts() {\n    return this.httpClient.get(`http://127.0.0.1:8000/api/posts`);\n  }\n  //delete post\n  deletePost(postId) {\n    return this.httpClient.delete(`http://127.0.0.1:8000/api/deletePost/${postId}`, this.requestOptions);\n  }\n  //update post\n  updatePost(postId, body) {\n    return this.httpClient.put(`http://127.0.0.1:8000/api/updatePost/${postId}`, {\n      'body': body\n    }, this.requestOptions);\n  }\n  setcomment(postId, body, user_id) {\n    console.log(postId + body + user_id);\n    return this.httpClient.post(`http://127.0.0.1:8000/api/addPostComment`, {\n      'body': body,\n      'post_id': postId,\n      'user_id': user_id\n    }, this.requestOptions);\n  }\n  updatecomment(commentId, body) {\n    return this.httpClient.put(`http://127.0.0.1:8000/api/update/comment/${commentId}`, {\n      'body': body\n    }, this.requestOptions);\n  }\n  deletecomment(commentId) {\n    return this.httpClient.delete(`http://127.0.0.1:8000/api/delete/comment/${commentId}`, this.requestOptions);\n  }\n}\nPostsService.ɵfac = function PostsService_Factory(t) {\n  return new (t || PostsService)(i0.ɵɵinject(i1.HttpClient));\n};\nPostsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: PostsService,\n  factory: PostsService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAG9D;AAKA,OAAM,MAAOC,YAAY;EAEvBC,YAAoBC,UAAuB;IAAvB,eAAU,GAAVA,UAAU;IAE9B;IAEF,YAAO,GAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAErC,YAAO,GAAG,IAAIL,WAAW,CAAC;MACxB,QAAQ,EAAE,kBAAkB;MAC5B,eAAe,EAAE,UAAU,IAAI,CAACM,OAAO;KACxC,CAAC;IACF,mBAAc,GAAE;MAAEC,OAAO,EAAC,IAAI,CAACA;IAAO,CAAE;EAVU;EAWlD;EACEC,OAAO,CAACC,QAAa;IACnB,OAAO,IAAI,CAACN,UAAU,CAACO,IAAI,CAAM,qCAAqC,EAAED,QAAQ,EAAG,IAAI,CAACE,cAAc,CAAC;EAEzG;EAEF;EACAC,qBAAqB,CAACC,YAAgB;IACpC,OAAO,IAAI,CAACV,UAAU,CAACW,GAAG,CAAM,mDAAmDD,YAAY,EAAE,CAAE;EACrG;EAEAE,MAAM,CAACC,UAAc;IACnB,OAAO,IAAI,CAACb,UAAU,CAACW,GAAG,CAAM,wCAAwCE,UAAU,EAAE,CAAE;EACxF;EAEAC,QAAQ;IACN,OAAO,IAAI,CAACd,UAAU,CAACW,GAAG,CAAM,iCAAiC,CAAE;EACrE;EAGA;EAEAI,UAAU,CAACC,MAAU;IACpB,OAAO,IAAI,CAAChB,UAAU,CAACiB,MAAM,CAAM,wCAAwCD,MAAM,EAAE,EAAG,IAAI,CAACR,cAAc,CAAC;EAE3G;EACA;EAEAU,UAAU,CAACF,MAAU,EAAGG,IAAQ;IAC9B,OAAO,IAAI,CAACnB,UAAU,CAACoB,GAAG,CAAM,wCAAwCJ,MAAM,EAAE,EAAG;MAAC,MAAM,EAACG;IAAI,CAAC,EAAG,IAAI,CAACX,cAAc,CAAE;EAC1H;EAEAa,UAAU,CAACL,MAAU,EAAGG,IAAQ,EAAEG,OAAW;IAC5CC,OAAO,CAACC,GAAG,CAACR,MAAM,GAACG,IAAI,GAAEG,OAAO,CAAE;IAEjC,OAAO,IAAI,CAACtB,UAAU,CAACO,IAAI,CAAM,0CAA0C,EAAG;MAAC,MAAM,EAACY,IAAI;MAAC,SAAS,EAACH,MAAM;MAAE,SAAS,EAACM;IAAO,CAAC,EAAG,IAAI,CAACd,cAAc,CAAE;EACzJ;EAEAiB,aAAa,CAACC,SAAa,EAAGP,IAAQ;IACpC,OAAO,IAAI,CAACnB,UAAU,CAACoB,GAAG,CAAM,4CAA4CM,SAAS,EAAE,EAAG;MAAC,MAAM,EAACP;IAAI,CAAE,EAAG,IAAI,CAACX,cAAc,CAAE;EAClI;EAEAmB,aAAa,CAACD,SAAa;IACzB,OAAO,IAAI,CAAC1B,UAAU,CAACiB,MAAM,CAAM,4CAA4CS,SAAS,EAAE,EAAG,IAAI,CAAClB,cAAc,CAAE;EACpH;;AAzDaV,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAA8B,SAAZ9B,YAAY;EAAA+B,YAFX;AAAM","names":["HttpHeaders","PostsService","constructor","httpClient","localStorage","getItem","api_key","headers","setPost","formData","post","requestOptions","getpostsbyinstrctorid","instructorId","get","search","searchpost","getPosts","deletePost","postId","delete","updatePost","body","put","setcomment","user_id","console","log","updatecomment","commentId","deletecomment","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\lenovo\\Desktop\\new\\Final-Project-Front-End\\src\\app\\user\\services\\posts.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n// import { UserDataService } from 'src/app/services/user-data.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostsService {\n\n  constructor(private httpClient : HttpClient ) { }\n\n  // id = this.userData.userData().id ;\n\napi_key=localStorage.getItem('token');\n\nheaders = new HttpHeaders({\n  'Accept': 'application/json',\n  'Authorization': `Bearer ${this.api_key}`\n});\nrequestOptions= { headers:this.headers };\n//set post\n  setPost(formData: any){\n    return this.httpClient.post<any>('http://127.0.0.1:8000/api/storePost', formData , this.requestOptions)\n\n  }\n\n//get posts\ngetpostsbyinstrctorid(instructorId:any){\n  return this.httpClient.get<any>(`http://127.0.0.1:8000/api/getpostsbyinstrctorid/${instructorId}` );\n}\n\nsearch(searchpost:any){\n  return this.httpClient.get<any>(`http://127.0.0.1:8000/api/searchpost/${searchpost}` );\n}\n\ngetPosts(){\n  return this.httpClient.get<any>(`http://127.0.0.1:8000/api/posts` );\n}\n\n\n//delete post\n\ndeletePost(postId:any){\n return this.httpClient.delete<any>(`http://127.0.0.1:8000/api/deletePost/${postId}` , this.requestOptions);\n \n}\n//update post\n\nupdatePost(postId:any , body:any ){\n  return this.httpClient.put<any>(`http://127.0.0.1:8000/api/updatePost/${postId}`  ,{'body':body} , this.requestOptions )\n}\n\nsetcomment(postId:any , body:any ,user_id:any){\n console.log(postId+body +user_id );\n  \n  return this.httpClient.post<any>(`http://127.0.0.1:8000/api/addPostComment`  ,{'body':body,'post_id':postId ,'user_id':user_id} , this.requestOptions )\n}\n\nupdatecomment(commentId:any , body:any){\n  return this.httpClient.put<any>(`http://127.0.0.1:8000/api/update/comment/${commentId}`  ,{'body':body } , this.requestOptions )\n}\n\ndeletecomment(commentId:any ){\n  return this.httpClient.delete<any>(`http://127.0.0.1:8000/api/delete/comment/${commentId}` , this.requestOptions )\n}\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}