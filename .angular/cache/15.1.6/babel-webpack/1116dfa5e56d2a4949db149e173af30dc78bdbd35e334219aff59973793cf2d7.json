{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class TextareaautosizeDirective {\n  constructor(element) {\n    this.element = element;\n    this.minRows = 2;\n    this.maxRows = 7;\n    this.offsetHeight = 0;\n    this.avgLineHeight = 20;\n    this.input = this.element.nativeElement;\n  }\n  onInput() {\n    if (this.offsetHeight <= 0) {\n      this.offsetHeight = this.input.scrollHeight;\n    }\n    this.input.rows = this.minRows;\n    const rows = Math.floor((this.input.scrollHeight - this.offsetHeight) / this.avgLineHeight);\n    const rowsCount = this.minRows + rows;\n    this.input.rows = rowsCount > this.maxRows ? this.maxRows : rowsCount;\n  }\n}\nTextareaautosizeDirective.ɵfac = function TextareaautosizeDirective_Factory(t) {\n  return new (t || TextareaautosizeDirective)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\nTextareaautosizeDirective.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n  type: TextareaautosizeDirective,\n  selectors: [[\"\", \"appTextareaautosize\", \"\"]],\n  hostBindings: function TextareaautosizeDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"input\", function TextareaautosizeDirective_input_HostBindingHandler() {\n        return ctx.onInput();\n      });\n    }\n  },\n  inputs: {\n    minRows: \"minRows\",\n    maxRows: \"maxRows\"\n  }\n});","map":{"version":3,"mappings":";AAKA,OAAM,MAAOA,yBAAyB;EAQpCC,YAAoBC,OAAkB;IAAlB,YAAO,GAAPA,OAAO;IANlB,YAAO,GAAG,CAAC;IACX,YAAO,GAAG,CAAC;IAGZ,iBAAY,GAAG,CAAC;IACP,kBAAa,GAAG,EAAE;IAEjC,IAAI,CAACC,KAAK,GAAG,IAAI,CAACD,OAAO,CAACE,aAAa;EACzC;EAIAC,OAAO;IAGL,IAAI,IAAI,CAACC,YAAY,IAAI,CAAC,EAAE;MAC1B,IAAI,CAACA,YAAY,GAAG,IAAI,CAACH,KAAK,CAACI,YAAY;;IAG7C,IAAI,CAACJ,KAAK,CAACK,IAAI,GAAG,IAAI,CAACC,OAAO;IAE9B,MAAMD,IAAI,GAAGE,IAAI,CAACC,KAAK,CACrB,CAAC,IAAI,CAACR,KAAK,CAACI,YAAY,GAAG,IAAI,CAACD,YAAY,IAC5C,IAAI,CAACM,aAAa,CACnB;IAED,MAAMC,SAAS,GAAG,IAAI,CAACJ,OAAO,GAAGD,IAAI;IAErC,IAAI,CAACL,KAAK,CAACK,IAAI,GAAGK,SAAS,GAAG,IAAI,CAACC,OAAO,GACrC,IAAI,CAACA,OAAO,GACZD,SAAS;EAChB;;AAjCWb,yBAAyB;mBAAzBA,yBAAyB;AAAA;AAAzBA,yBAAyB;QAAzBA,yBAAyB;EAAAe;EAAAC;IAAA;;eAAzBC,aAAS;MAAA","names":["TextareaautosizeDirective","constructor","element","input","nativeElement","onInput","offsetHeight","scrollHeight","rows","minRows","Math","floor","avgLineHeight","rowsCount","maxRows","selectors","hostBindings","ctx"],"sourceRoot":"","sources":["C:\\Users\\lenovo\\Desktop\\new\\Final-Project-Front-End\\src\\app\\user\\textareaautosize.directive.ts"],"sourcesContent":["import { Directive, ElementRef, HostListener, Input } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[appTextareaautosize]'\r\n})\r\nexport class TextareaautosizeDirective {\r\n\r\n  @Input() minRows = 2;\r\n  @Input() maxRows = 7;\r\n\r\n  private input: HTMLTextAreaElement;\r\n  private offsetHeight = 0;\r\n  private readonly avgLineHeight = 20;\r\n  constructor(private element:ElementRef) { \r\n    this.input = this.element.nativeElement;\r\n  }\r\n\r\n \r\n  @HostListener(\"input\")\r\n  onInput(): void {\r\n    \r\n  \r\n    if (this.offsetHeight <= 0) {\r\n      this.offsetHeight = this.input.scrollHeight;\r\n    }\r\n  \r\n    this.input.rows = this.minRows;\r\n  \r\n    const rows = Math.floor(\r\n      (this.input.scrollHeight - this.offsetHeight) /\r\n      this.avgLineHeight\r\n    );\r\n  \r\n    const rowsCount = this.minRows + rows;\r\n  \r\n    this.input.rows = rowsCount > this.maxRows\r\n       ? this.maxRows\r\n       : rowsCount;\r\n  }\r\n  \r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}