{"ast":null,"code":"// import { DeviceDetectorService } from 'ngx-device-detector';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../auth.service\";\nimport * as i3 from \"src/app/services/user-data.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nfunction LoginComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 28)(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.error);\n  }\n}\nfunction LoginComponent_div_20_h6_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h6\", 31);\n    i0.ɵɵtext(1, \"invalid email\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h6\", 29);\n    i0.ɵɵtext(2, \" email is required\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, LoginComponent_div_20_h6_3_Template, 2, 0, \"h6\", 30);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.loginForm.controls[\"email\"].hasError(\"email\"));\n  }\n}\nfunction LoginComponent_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h6\", 32);\n    i0.ɵɵtext(2, \" password is required\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class LoginComponent {\n  constructor(router, authService, userDataService) {\n    this.router = router;\n    this.authService = authService;\n    this.userDataService = userDataService;\n    this.error = '';\n    this.loginForm = new FormGroup({\n      email: new FormControl(null, [Validators.required, Validators.email]),\n      password: new FormControl(null, [Validators.required])\n    });\n  }\n  submitRegisterForm(loginForm) {\n    if (loginForm.valid) {\n      this.authService.login(this.loginForm.value).subscribe(response => {\n        console.log(response);\n        if (response.message == \"success\") {\n          localStorage.setItem('token', response.token);\n          localStorage.setItem('user', JSON.stringify(response.data));\n          this.authService.token();\n          this.userDataService.token();\n          this.userDataService.userData();\n          this.router.navigate(['/user/Questions']);\n        } else {\n          this.error = response.message;\n        }\n      });\n    }\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.UserDataService));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 47,\n  vars: 4,\n  consts: [[1, \"container\", \"d-flex\", \"justify-content-center\", \"align-items-center\", \"min-vh-100\"], [1, \"row\", \"border\", \"rounded-5\", \"p-3\", \"bg-white\", \"shadow\", \"box-area\"], [1, \"col-md-6\", \"rounded-4\", \"d-flex\", \"justify-content-center\", \"align-items-center\", \"flex-column\", \"left-box\", \"bg\"], [1, \"featured-image\", \"mb-3\"], [\"src\", \"../../../assets/images/1.png\", 1, \"img-fluid\", 2, \"width\", \"250px\"], [1, \"text-white\", \"fs-2\", 2, \"font-family\", \"'Courier New', Courier, monospace\", \"font-weight\", \"600\"], [1, \"text-white\", \"text-wrap\", \"text-center\", 2, \"width\", \"17rem\", \"font-family\", \"'Courier New', Courier, monospace\"], [1, \"col-md-6\", \"right-box\"], [1, \"row\", \"align-items-center\"], [1, \"header-text\", \"mb-4\"], [3, \"formGroup\", \"ngSubmit\"], [\"class\", \"alert alert-danger m-2\", 4, \"ngIf\"], [1, \"input-group\", \"mb-3\"], [\"type\", \"text\", \"placeholder\", \"Email address\", \"formControlName\", \"email\", 1, \"form-control\", \"form-control-lg\", \"bg-light\", \"fs-6\"], [4, \"ngIf\"], [1, \"input-group\", \"mb-1\"], [\"type\", \"password\", \"placeholder\", \"Password\", \"formControlName\", \"password\", 1, \"form-control\", \"form-control-lg\", \"bg-light\", \"fs-6\"], [1, \"input-group\", \"mb-5\", \"d-flex\", \"justify-content-between\"], [1, \"form-check\"], [\"type\", \"checkbox\", \"id\", \"formCheck\", 1, \"form-check-input\"], [\"for\", \"formCheck\", 1, \"form-check-label\", \"text-secondary\"], [1, \"forgot\"], [\"href\", \"#\"], [\"type\", \"submit\", 1, \"btn\", \"btn-lg\", \"w-100\", \"fs-6\"], [1, \"btn\", \"btn-lg\", \"btn-light\", \"w-100\", \"fs-6\"], [\"src\", \"../../../assets/images/google.png\", 1, \"me-2\", 2, \"width\", \"20px\"], [1, \"row\"], [\"routerLink\", \"/beforeRegister\", 1, \"link\", \"text-dark\"], [1, \"alert\", \"alert-danger\", \"m-2\"], [\"ngIf\", \"loginForm.controls['email'].hasError('required')\", 1, \"text-danger\", \"mt-2\"], [\"class\", \"text-danger  mt-2\", 4, \"ngIf\"], [1, \"text-danger\", \"mt-2\"], [\"ngIf\", \"loginForm.controls['password'].hasError('required')\", 1, \"text-danger\", \"mt-2\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3);\n      i0.ɵɵelement(4, \"img\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"p\", 5);\n      i0.ɵɵtext(6, \"Be Verified\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"small\", 6);\n      i0.ɵɵtext(8, \"Join experienced Designers on this platform.\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"div\", 7)(10, \"div\", 8)(11, \"div\", 9)(12, \"h2\");\n      i0.ɵɵtext(13, \"Hello,Again\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"p\");\n      i0.ɵɵtext(15, \"We are happy to have you back.\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(16, \"form\", 10);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_16_listener() {\n        return ctx.submitRegisterForm(ctx.loginForm);\n      });\n      i0.ɵɵtemplate(17, LoginComponent_div_17_Template, 3, 1, \"div\", 11);\n      i0.ɵɵelementStart(18, \"div\", 12);\n      i0.ɵɵelement(19, \"input\", 13);\n      i0.ɵɵtemplate(20, LoginComponent_div_20_Template, 4, 1, \"div\", 14);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"div\", 15);\n      i0.ɵɵelement(22, \"input\", 16);\n      i0.ɵɵtemplate(23, LoginComponent_div_23_Template, 3, 0, \"div\", 14);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"div\", 17)(25, \"div\", 18);\n      i0.ɵɵelement(26, \"input\", 19);\n      i0.ɵɵelementStart(27, \"label\", 20)(28, \"small\");\n      i0.ɵɵtext(29, \"Remember Me\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(30, \"div\", 21)(31, \"small\")(32, \"a\", 22);\n      i0.ɵɵtext(33, \"Forgot Password?\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(34, \"div\", 12)(35, \"button\", 23);\n      i0.ɵɵtext(36, \"Login\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(37, \"div\", 12)(38, \"button\", 24);\n      i0.ɵɵelement(39, \"img\", 25);\n      i0.ɵɵelementStart(40, \"small\");\n      i0.ɵɵtext(41, \"Sign In with Google\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(42, \"div\", 26)(43, \"small\");\n      i0.ɵɵtext(44, \"Don't have account? \");\n      i0.ɵɵelementStart(45, \"a\", 27);\n      i0.ɵɵtext(46, \"Sign Up\");\n      i0.ɵɵelementEnd()()()()()()();\n    }\n    if (rf & 2) {\n      let tmp_2_0;\n      let tmp_3_0;\n      i0.ɵɵadvance(16);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.error);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.loginForm.get(\"email\")) == null ? null : tmp_2_0.errors) != null && ((tmp_2_0 = ctx.loginForm.get(\"email\")) == null ? null : tmp_2_0.touched));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_3_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_3_0.errors) != null && ((tmp_3_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_3_0.touched));\n    }\n  },\n  dependencies: [i4.NgIf, i1.RouterLink, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.FormGroupDirective, i5.FormControlName],\n  styles: [\"@import url(https://fonts.googleapis.com/css2?family=Poppins:wght@400;500&display=swap)[_ngcontent-%COMP%];body[_ngcontent-%COMP%]{\\r\\n    font-family: 'Poppins', sans-serif;\\r\\n    background: #ececec;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n.box-area[_ngcontent-%COMP%]{\\r\\n    width: 930px;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n.right-box[_ngcontent-%COMP%]{\\r\\n    padding: 40px 30px 40px 40px;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n[_ngcontent-%COMP%]::placeholder{\\r\\n    font-size: 16px;\\r\\n}\\r\\n\\r\\n.rounded-4[_ngcontent-%COMP%]{\\r\\n    border-radius: 20px;\\r\\n}\\r\\n.rounded-5[_ngcontent-%COMP%]{\\r\\n    border-radius: 30px;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n@media only screen and (max-width: 768px){\\r\\n\\r\\n     .box-area[_ngcontent-%COMP%]{\\r\\n        margin: 0 10px;\\r\\n\\r\\n     }\\r\\n     .left-box[_ngcontent-%COMP%]{\\r\\n        height: 100px;\\r\\n        overflow: hidden;\\r\\n     }\\r\\n     .right-box[_ngcontent-%COMP%]{\\r\\n        padding: 20px;\\r\\n     }\\r\\n\\r\\n}\\r\\n\\r\\n.bg[_ngcontent-%COMP%]{\\r\\n    background-color: var(--main-color);\\r\\n}\\r\\n\\r\\n.btn[_ngcontent-%COMP%]{\\r\\n    background-color: var(--main-color) !important;\\r\\n    color: white;\\r\\n}\\r\\n\\r\\n.link[_ngcontent-%COMP%]{\\r\\n    text-decoration: underline;\\r\\n    cursor: pointer;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXV0aC9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBO0lBQ0ksa0NBQWtDO0lBQ2xDLG1CQUFtQjtBQUN2Qjs7QUFFQSxnREFBZ0Q7O0FBRWhEO0lBQ0ksWUFBWTtBQUNoQjs7QUFFQSwwQ0FBMEM7O0FBRTFDO0lBQ0ksNEJBQTRCO0FBQ2hDOztBQUVBLG1EQUFtRDs7QUFFbkQ7SUFDSSxlQUFlO0FBQ25COztBQUVBO0lBQ0ksbUJBQW1CO0FBQ3ZCO0FBQ0E7SUFDSSxtQkFBbUI7QUFDdkI7OztBQUdBLGlEQUFpRDs7QUFFakQ7O0tBRUs7UUFDRyxjQUFjOztLQUVqQjtLQUNBO1FBQ0csYUFBYTtRQUNiLGdCQUFnQjtLQUNuQjtLQUNBO1FBQ0csYUFBYTtLQUNoQjs7QUFFTDs7QUFFQTtJQUNJLG1DQUFtQztBQUN2Qzs7QUFFQTtJQUNJLDhDQUE4QztJQUM5QyxZQUFZO0FBQ2hCOztBQUVBO0lBQ0ksMEJBQTBCO0lBQzFCLGVBQWU7QUFDbkIiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0IHVybCgnaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3MyP2ZhbWlseT1Qb3BwaW5zOndnaHRANDAwOzUwMCZkaXNwbGF5PXN3YXAnKTtcclxuXHJcbmJvZHl7XHJcbiAgICBmb250LWZhbWlseTogJ1BvcHBpbnMnLCBzYW5zLXNlcmlmO1xyXG4gICAgYmFja2dyb3VuZDogI2VjZWNlYztcclxufVxyXG5cclxuLyogLy0tLS0tLS0tLS0tLSBMb2dpbiBjb250YWluZXIgLS0tLS0tLS0tLS0tLyAqL1xyXG5cclxuLmJveC1hcmVhe1xyXG4gICAgd2lkdGg6IDkzMHB4O1xyXG59XHJcblxyXG4vKiAvLS0tLS0tLS0tLS0tIFJpZ2h0IGJveCAtLS0tLS0tLS0tLS0vICovXHJcblxyXG4ucmlnaHQtYm94e1xyXG4gICAgcGFkZGluZzogNDBweCAzMHB4IDQwcHggNDBweDtcclxufVxyXG5cclxuLyogLy0tLS0tLS0tLS0tLSBDdXN0b20gUGxhY2Vob2xkZXIgLS0tLS0tLS0tLS0tLyAqL1xyXG5cclxuOjpwbGFjZWhvbGRlcntcclxuICAgIGZvbnQtc2l6ZTogMTZweDtcclxufVxyXG5cclxuLnJvdW5kZWQtNHtcclxuICAgIGJvcmRlci1yYWRpdXM6IDIwcHg7XHJcbn1cclxuLnJvdW5kZWQtNXtcclxuICAgIGJvcmRlci1yYWRpdXM6IDMwcHg7XHJcbn1cclxuXHJcblxyXG4vKiAvLS0tLS0tLS0tLS0tIEZvciBzbWFsbCBzY3JlZW5zLS0tLS0tLS0tLS0tLyAqL1xyXG5cclxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCl7XHJcblxyXG4gICAgIC5ib3gtYXJlYXtcclxuICAgICAgICBtYXJnaW46IDAgMTBweDtcclxuXHJcbiAgICAgfVxyXG4gICAgIC5sZWZ0LWJveHtcclxuICAgICAgICBoZWlnaHQ6IDEwMHB4O1xyXG4gICAgICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICAgfVxyXG4gICAgIC5yaWdodC1ib3h7XHJcbiAgICAgICAgcGFkZGluZzogMjBweDtcclxuICAgICB9XHJcblxyXG59XHJcblxyXG4uYmd7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1tYWluLWNvbG9yKTtcclxufVxyXG5cclxuLmJ0bntcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLW1haW4tY29sb3IpICFpbXBvcnRhbnQ7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbn1cclxuXHJcbi5saW5re1xyXG4gICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","FormGroup","Validators","i0","LoginComponent","constructor","router","authService","userDataService","email","required","password","submitRegisterForm","loginForm","valid","login","value","subscribe","response","console","log","message","localStorage","setItem","token","JSON","stringify","data","userData","navigate","error","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\lenovo\\Desktop\\new\\Final-Project-Front-End\\src\\app\\auth\\login\\login.component.ts","C:\\Users\\lenovo\\Desktop\\new\\Final-Project-Front-End\\src\\app\\auth\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\n// import { DeviceDetectorService } from 'ngx-device-detector';\r\n\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../auth.service';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { UserDataService } from 'src/app/services/user-data.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent {\r\n  error: string = ''\r\n\r\n  loginForm: FormGroup = new FormGroup({\r\n    email: new FormControl(null, [Validators.required, Validators.email]),\r\n    password: new FormControl(null, [Validators.required]),\r\n  \r\n\r\n  })\r\n\r\n\r\nconstructor(private router:Router ,private authService:AuthService ,private userDataService:UserDataService){\r\n\r\n}\r\n\r\n\r\n   submitRegisterForm(loginForm:FormGroup){\r\n  if(loginForm.valid){\r\n  this.authService.login(this.loginForm.value).subscribe((response)=>{\r\n    console.log(response);\r\n    if(response.message == \"success\"){\r\n   localStorage.setItem('token',response.token)\r\n   localStorage.setItem('user',JSON.stringify(response.data))\r\n  \r\n     this.authService.token();\r\n    this.userDataService.token();\r\n    this.userDataService.userData()\r\n     this.router.navigate(['/user/Questions'])\r\n    }else{\r\n\r\nthis.error=response.message\r\n\r\n\r\n    }\r\n  })\r\n  }\r\n  }\r\n\r\n\r\n}","\r\n\r\n    <div class=\"container d-flex justify-content-center align-items-center min-vh-100\">\r\n\r\n      <!----------------------- Login Container -------------------------->\r\n  \r\n         <div class=\"row border rounded-5 p-3 bg-white shadow box-area\">\r\n  \r\n      <!--------------------------- Left Box ----------------------------->\r\n  \r\n         <div class=\"col-md-6 rounded-4 d-flex justify-content-center align-items-center flex-column left-box bg\" >\r\n             <div class=\"featured-image mb-3\">\r\n              <img src=\"../../../assets/images/1.png\" class=\"img-fluid\" style=\"width: 250px;\">\r\n             </div>\r\n             <p class=\"text-white fs-2\" style=\"font-family: 'Courier New', Courier, monospace; font-weight: 600;\">Be Verified</p>\r\n             <small class=\"text-white text-wrap text-center\" style=\"width: 17rem;font-family: 'Courier New', Courier, monospace;\">Join experienced Designers on this platform.</small>\r\n         </div> \r\n  \r\n      <!-------------------- ------ Right Box ---------------------------->\r\n          \r\n         <div class=\"col-md-6 right-box\">\r\n            <div class=\"row align-items-center\">\r\n                  <div class=\"header-text mb-4\">\r\n                       <h2>Hello,Again</h2>\r\n                       <p>We are happy to have you back.</p>\r\n                  </div>\r\n                  <form        [formGroup]=\"loginForm\"   (ngSubmit)=\"submitRegisterForm(loginForm)\"  >\r\n                    <div class=\"alert alert-danger m-2\" *ngIf=\"error\">\r\n                      <p>{{error}}</p>\r\n                    </div>\r\n                  <div class=\"input-group mb-3\">\r\n                      <input type=\"text\" class=\"form-control form-control-lg bg-light fs-6\" placeholder=\"Email address\" formControlName=\"email\">\r\n                      <div  *ngIf=\"loginForm.get('email')?.errors!= null && loginForm.get('email')?.touched\">\r\n                        <h6 class=\"text-danger  mt-2\" ngIf=\"loginForm.controls['email'].hasError('required')\"> email is required</h6> \r\n                        <h6  class=\"text-danger  mt-2\" *ngIf=\"loginForm.controls['email'].hasError('email')\">invalid email</h6>\r\n                      </div>\r\n                  \r\n                    </div>\r\n                  <div class=\"input-group mb-1\">\r\n                      <input type=\"password\" class=\"form-control form-control-lg bg-light fs-6\" placeholder=\"Password\" formControlName=\"password\">\r\n                  \r\n                      <div  *ngIf=\"loginForm.get('password')?.errors!= null && loginForm.get('password')?.touched\">\r\n                        <h6 class=\"text-danger  mt-2\" ngIf=\"loginForm.controls['password'].hasError('required')\"> password is required</h6> \r\n                          \r\n                      </div>\r\n                    </div>\r\n                  <div class=\"input-group mb-5 d-flex justify-content-between\">\r\n                      <div class=\"form-check\">\r\n                          <input type=\"checkbox\" class=\"form-check-input\" id=\"formCheck\">\r\n                          <label for=\"formCheck\" class=\"form-check-label text-secondary\"><small>Remember Me</small></label>\r\n                      </div>\r\n                      <div class=\"forgot\">\r\n                          <small><a href=\"#\">Forgot Password?</a></small>\r\n                      </div>\r\n                  </div>\r\n                  <div class=\"input-group mb-3\">\r\n                      <button class=\"btn btn-lg  w-100 fs-6\" type=\"submit\">Login</button>\r\n                  </div>\r\n                </form>\r\n                  <div class=\"input-group mb-3\">\r\n                      <button class=\"btn btn-lg btn-light w-100 fs-6\"><img src=\"../../../assets/images/google.png\" style=\"width:20px\" class=\"me-2\"><small>Sign In with Google</small></button>\r\n                  </div>\r\n                  <div class=\"row\">\r\n                      <small>Don't have account? <a routerLink=\"/beforeRegister\" class=\"link text-dark\">Sign Up</a></small>\r\n                  </div>\r\n            </div>\r\n         </div> \r\n  \r\n        </div>\r\n      </div>\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}