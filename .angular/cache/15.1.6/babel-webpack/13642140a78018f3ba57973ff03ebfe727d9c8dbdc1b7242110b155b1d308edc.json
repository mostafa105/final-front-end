{"ast":null,"code":"import { HttpHeaders } from \"@angular/common/http\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserHomeService {\n  constructor(HttpClient) {\n    this.HttpClient = HttpClient;\n    this.api_key = localStorage.getItem(\"token\");\n    this.headers = new HttpHeaders({\n      Accept: \"application/json\",\n      Authorization: `Bearer ${this.api_key}`\n    });\n    this.requestOptions = {\n      headers: this.headers\n    };\n  }\n  addquestion(data) {\n    return this.HttpClient.post(\"http://127.0.0.1:8000/api/questions/store\", data, this.requestOptions);\n  }\n  addnewqcomment(body, user_id, question_id) {\n    return this.HttpClient.post(\"http://127.0.0.1:8000/api/qcomments\", {\n      qcomment_body: body,\n      instructor_id: user_id,\n      question_id: question_id\n    }, this.requestOptions);\n  }\n  addnewreply(body, user_id, qcomment_id) {\n    return this.HttpClient.post(\"http://127.0.0.1:8000/api/replies/store\", {\n      reply_body: body,\n      user_id: user_id,\n      qcomment_id: qcomment_id\n    }, this.requestOptions);\n  }\n  updatequestionbyid(id, body, subtrack_id) {\n    return this.HttpClient.put(\"http://127.0.0.1:8000/api/questions/update/\" + id, {\n      question_body: body,\n      subtrack_id: subtrack_id\n    }, this.requestOptions);\n  }\n  updateqcommentbyid(id, body) {\n    return this.HttpClient.put(\"http://127.0.0.1:8000/api/qcomments/\" + id, {\n      qcomment_body: body\n    }, this.requestOptions);\n  }\n  updatereplybyid(id, body) {\n    return this.HttpClient.put(\"http://127.0.0.1:8000/api/replies/update/\" + id, {\n      reply_body: body\n    }, this.requestOptions);\n  }\n  deletequestionbyid(question_id) {\n    return this.HttpClient.delete(\"http://127.0.0.1:8000/api/questions/delete/\" + question_id, this.requestOptions);\n  }\n  deleteqcommentbyid(qcommetn_id) {\n    return this.HttpClient.delete(\"http://127.0.0.1:8000/api/qcomments/\" + qcommetn_id, this.requestOptions);\n  }\n  deletereplybyid(reply_id) {\n    return this.HttpClient.delete(\"http://127.0.0.1:8000/api/replies/delete/\" + reply_id, this.requestOptions);\n  }\n  showquestion() {\n    return this.HttpClient.get(\"http://127.0.0.1:8000/api/questions\", this.requestOptions);\n  }\n  getquestionbyuser(userid) {\n    return this.HttpClient.get(`http://127.0.0.1:8000/api/getquestionbyuser/${userid}`, this.requestOptions);\n  }\n  showquestionbyuser(user_id) {\n    return this.HttpClient.get(\"http://127.0.0.1:8000/api/getquestionbyuser/\" + user_id), this.requestOptions;\n  }\n  search(searchquestions) {\n    return this.HttpClient.get(`http://127.0.0.1:8000/api/searchquestions/${searchquestions}`, this.requestOptions);\n  }\n  showfilter(subtrack) {\n    return this.HttpClient.get(\"http://127.0.0.1:8000/api/filterquestions/\" + subtrack, this.requestOptions);\n  }\n  showcomment() {\n    return this.HttpClient.get(\"http://127.0.0.1:8000/api/qcomments\", this.requestOptions);\n  }\n  showreply() {\n    return this.HttpClient.get(\"http://127.0.0.1:8000/api/replies\", this.requestOptions);\n  }\n  showsubtrack() {\n    return this.HttpClient.get(\"http://127.0.0.1:8000/api/subtracks\", this.requestOptions);\n  }\n  setlike(comment_id, user_id) {\n    return this.HttpClient.post(\"http://127.0.0.1:8000/api/likes\", {\n      qcomment_id: comment_id,\n      user_id: user_id\n    }, this.requestOptions);\n  }\n  removelike(like_id) {\n    return this.HttpClient.delete(\"http://127.0.0.1:8000/api/likes/like_id\", this.requestOptions);\n  }\n}\nUserHomeService.ɵfac = function UserHomeService_Factory(t) {\n  return new (t || UserHomeService)(i0.ɵɵinject(i1.HttpClient));\n};\nUserHomeService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserHomeService,\n  factory: UserHomeService.ɵfac,\n  providedIn: \"root\"\n});","map":{"version":3,"mappings":"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","names":["HttpHeaders","UserHomeService","constructor","HttpClient","localStorage","getItem","Accept","Authorization","api_key","headers","addquestion","data","post","requestOptions","addnewqcomment","body","user_id","question_id","qcomment_body","instructor_id","addnewreply","qcomment_id","reply_body","updatequestionbyid","id","subtrack_id","put","question_body","updateqcommentbyid","updatereplybyid","deletequestionbyid","delete","deleteqcommentbyid","qcommetn_id","deletereplybyid","reply_id","showquestion","get","getquestionbyuser","userid","showquestionbyuser","search","searchquestions","showfilter","subtrack","showcomment","showreply","showsubtrack","setlike","comment_id","removelike","like_id","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\lenovo\\Desktop\\new\\Final-Project-Front-End\\src\\app\\user\\services\\user-home.service.ts"],"sourcesContent":["import { showfilter } from \"./../animation\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable, throwError } from \"rxjs\";\nimport { catchError, retry } from \"rxjs/operators\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class UserHomeService {\n  constructor(private HttpClient: HttpClient) {}\n  api_key = localStorage.getItem(\"token\");\n\n  headers = new HttpHeaders({\n    Accept: \"application/json\",\n    Authorization: `Bearer ${this.api_key}`,\n  });\n  requestOptions = { headers: this.headers };\n\n  addquestion(data: Object) {\n    return this.HttpClient.post<any>(\n      \"http://127.0.0.1:8000/api/questions/store\",\n      data,\n      this.requestOptions\n    );\n  }\n\n  addnewqcomment(body: string, user_id: string, question_id: number) {\n    return this.HttpClient.post<any>(\n      \"http://127.0.0.1:8000/api/qcomments\",\n      { qcomment_body: body, instructor_id: user_id, question_id: question_id },\n      this.requestOptions\n    );\n  }\n\n  addnewreply(body: string, user_id: string, qcomment_id: number) {\n    return this.HttpClient.post<any>(\n      \"http://127.0.0.1:8000/api/replies/store\",\n      { reply_body: body, user_id: user_id, qcomment_id: qcomment_id },\n      this.requestOptions\n    );\n  }\n\n  updatequestionbyid(id: string, body: string, subtrack_id: string) {\n    return this.HttpClient.put<any>(\n      \"http://127.0.0.1:8000/api/questions/update/\" + id,\n      { question_body: body, subtrack_id: subtrack_id },\n      this.requestOptions\n    );\n  }\n\n  updateqcommentbyid(id: string, body: string) {\n    return this.HttpClient.put<any>(\n      \"http://127.0.0.1:8000/api/qcomments/\" + id,\n      { qcomment_body: body },\n      this.requestOptions\n    );\n  }\n\n  updatereplybyid(id: string, body: string) {\n    return this.HttpClient.put<any>(\n      \"http://127.0.0.1:8000/api/replies/update/\" + id,\n      { reply_body: body },\n      this.requestOptions\n    );\n  }\n\n  deletequestionbyid(question_id: string) {\n    return this.HttpClient.delete<any>(\n      \"http://127.0.0.1:8000/api/questions/delete/\" + question_id,\n      this.requestOptions\n    );\n  }\n\n  deleteqcommentbyid(qcommetn_id: string) {\n    return this.HttpClient.delete<any>(\n      \"http://127.0.0.1:8000/api/qcomments/\" + qcommetn_id,\n      this.requestOptions\n    );\n  }\n\n  deletereplybyid(reply_id: string) {\n    return this.HttpClient.delete<any>(\n      \"http://127.0.0.1:8000/api/replies/delete/\" + reply_id,\n      this.requestOptions\n    );\n  }\n\n  showquestion() {\n    return this.HttpClient.get<any>(\n      \"http://127.0.0.1:8000/api/questions\",\n      this.requestOptions\n    );\n  }\n\n  getquestionbyuser(userid: any) {\n    return this.HttpClient.get<any>(\n      `http://127.0.0.1:8000/api/getquestionbyuser/${userid}`,\n      this.requestOptions\n    );\n  }\n\n  showquestionbyuser(user_id: string) {\n    return (\n      this.HttpClient.get<any>(\n        \"http://127.0.0.1:8000/api/getquestionbyuser/\" + user_id\n      ),\n      this.requestOptions\n    );\n  }\n\n  search(searchquestions: any) {\n    return this.HttpClient.get<any>(\n      `http://127.0.0.1:8000/api/searchquestions/${searchquestions}`,\n      this.requestOptions\n    );\n  }\n\n  showfilter(subtrack: string) {\n    return this.HttpClient.get<any>(\n      \"http://127.0.0.1:8000/api/filterquestions/\" + subtrack,\n      this.requestOptions\n    );\n  }\n  showcomment() {\n    return this.HttpClient.get<any>(\n      \"http://127.0.0.1:8000/api/qcomments\",\n      this.requestOptions\n    );\n  }\n\n  showreply() {\n    return this.HttpClient.get<any>(\n      \"http://127.0.0.1:8000/api/replies\",\n      this.requestOptions\n    );\n  }\n\n  showsubtrack() {\n    return this.HttpClient.get<any>(\n      \"http://127.0.0.1:8000/api/subtracks\",\n      this.requestOptions\n    );\n  }\n\n  setlike(comment_id: string, user_id: string) {\n    return this.HttpClient.post<any>(\n      \"http://127.0.0.1:8000/api/likes\",\n      { qcomment_id: comment_id, user_id: user_id },\n      this.requestOptions\n    );\n  }\n  removelike(like_id: string) {\n    return this.HttpClient.delete<any>(\n      \"http://127.0.0.1:8000/api/likes/like_id\",\n      this.requestOptions\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}