{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport class AuthService {\n  constructor(httpClient, router) {\n    this.httpClient = httpClient;\n    this.router = router;\n    this.api_key = localStorage.getItem('token');\n    this.headers = new HttpHeaders({\n      'Accept': 'application/json',\n      'Authorization': `Bearer ${this.api_key}`\n    });\n    this.requestOptions = {\n      headers: this.headers\n    };\n    this.userToken = new BehaviorSubject(null);\n    this.userRole = new BehaviorSubject(1);\n    if (localStorage.getItem('token') != null) {\n      this.token();\n    }\n  }\n  token() {\n    this.userToken.next(localStorage.getItem('token'));\n    this.userRole.next(JSON.parse(localStorage.getItem('user') || \"1\").role_id);\n  }\n  logout() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    this.userToken.next(null);\n    this.router.navigate(['/login']);\n  }\n  log() {\n    return this.httpClient.get(`http://127.0.0.1:8000/api/logout`, this.requestOptions);\n  }\n  register(formData) {\n    return this.httpClient.post(`http://127.0.0.1:8000/api/register`, formData);\n  }\n  login(formData) {\n    return this.httpClient.post(`http://127.0.0.1:8000/api/login`, formData);\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAASA,eAAe,QAAoB,MAAM;AAClD,SAAqBC,WAAW,QAAQ,sBAAsB;;;;AAM9D,OAAM,MAAOC,WAAW;EAYxBC,YAAqBC,UAAsB,EAAWC,MAAa;IAA9C,eAAU,GAAVD,UAAU;IAAuB,WAAM,GAANC,MAAM;IAV1D,YAAO,GAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAErC,YAAO,GAAG,IAAIN,WAAW,CAAC;MACxB,QAAQ,EAAE,kBAAkB;MAC5B,eAAe,EAAE,UAAU,IAAI,CAACO,OAAO;KACxC,CAAC;IACF,mBAAc,GAAE;MAAEC,OAAO,EAAC,IAAI,CAACA;IAAO,CAAE;IAE1C,cAAS,GAAC,IAAIT,eAAe,CAAM,IAAI,CAAC;IACxC,aAAQ,GAAC,IAAIA,eAAe,CAAM,CAAC,CAAC;IAEpC,IAAGM,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAE,IAAI,EAAC;MACrC,IAAI,CAACG,KAAK,EAAE;;EAIX;EAEHA,KAAK;IACH,IAAI,CAACC,SAAS,CAACC,IAAI,CAACN,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;IAClD,IAAI,CAACM,QAAQ,CAACD,IAAI,CAACE,IAAI,CAACC,KAAK,CAACT,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,IAAE,GAAG,CAAC,CAACS,OAAO,CAAC;EAE3E;EAEAC,MAAM;IACJX,YAAY,CAACY,UAAU,CAAC,OAAO,CAAC;IAChCZ,YAAY,CAACY,UAAU,CAAC,MAAM,CAAC;IACjC,IAAI,CAACP,SAAS,CAACC,IAAI,CAAC,IAAI,CAAC;IACzB,IAAI,CAACP,MAAM,CAACc,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;EAChC;EAEAC,GAAG;IACD,OAAQ,IAAI,CAAChB,UAAU,CAACiB,GAAG,CAAC,kCAAkC,EAAC,IAAI,CAACC,cAAc,CAAC;EACrF;EAEAC,QAAQ,CAACC,QAAe;IACvB,OAAQ,IAAI,CAACpB,UAAU,CAACqB,IAAI,CAAC,oCAAoC,EAACD,QAAQ,CAAC;EAC5E;EAEAE,KAAK,CAACF,QAAe;IACnB,OAAQ,IAAI,CAACpB,UAAU,CAACqB,IAAI,CAAC,iCAAiC,EAACD,QAAQ,CAAC;EACzE;;AA3CYtB,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAyB,SAAXzB,WAAW;EAAA0B,YAFV;AAAM","names":["BehaviorSubject","HttpHeaders","AuthService","constructor","httpClient","router","localStorage","getItem","api_key","headers","token","userToken","next","userRole","JSON","parse","role_id","logout","removeItem","navigate","log","get","requestOptions","register","formData","post","login","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\lenovo\\Desktop\\new\\Final-Project-Front-End\\src\\app\\auth\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  api_key=localStorage.getItem('token');\r\n\r\n  headers = new HttpHeaders({\r\n    'Accept': 'application/json',\r\n    'Authorization': `Bearer ${this.api_key}`\r\n  });\r\n  requestOptions= { headers:this.headers };\r\n\r\nuserToken=new BehaviorSubject<any>(null);\r\nuserRole=new BehaviorSubject<any>(1)\r\nconstructor(private  httpClient: HttpClient , private router:Router) {\r\nif(localStorage.getItem('token')!=null){\r\n  this.token();\r\n}\r\n\r\n\r\n   }\r\n\r\ntoken(){\r\n  this.userToken.next(localStorage.getItem('token'));\r\n  this.userRole.next(JSON.parse(localStorage.getItem('user')||\"1\").role_id)\r\n  \r\n}\r\n\r\nlogout(){\r\n  localStorage.removeItem('token');\r\n  localStorage.removeItem('user');\r\nthis.userToken.next(null);\r\nthis.router.navigate(['/login'])\r\n}\r\n\r\nlog():Observable<any>{\r\n  return  this.httpClient.get(`http://127.0.0.1:8000/api/logout`,this.requestOptions)\r\n}\r\n\r\nregister(formData:object ):Observable<any>{\r\n return  this.httpClient.post(`http://127.0.0.1:8000/api/register`,formData)\r\n}\r\n\r\nlogin(formData:object ):Observable<any>{\r\n  return  this.httpClient.post(`http://127.0.0.1:8000/api/login`,formData)\r\n }\r\n\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}