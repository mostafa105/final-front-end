{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TestService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.api_key = localStorage.getItem('token');\n    this.headers = new HttpHeaders({\n      'Accept': 'application/json',\n      'Authorization': `Bearer ${this.api_key}`\n    });\n    this.requestOptions = {\n      headers: this.headers\n    };\n  }\n  getTest(id) {\n    return this.httpClient.get(`http://127.0.0.1:8000/api/show/tests/${id}`);\n  }\n  sendAnswer(answers) {\n    console.log({\n      answer: answers\n    });\n    return this.httpClient.post(`http://127.0.0.1:8000/api/test/answers`, {\n      answer: answers\n    }, this.requestOptions);\n  }\n  getVerifiedSubtracks(id) {\n    return this.httpClient.get(`http://127.0.0.1:8000/api/getInstructorSubTrack/${id}`, this.requestOptions);\n  }\n  getUnverifiedSubtracks(id) {\n    return this.httpClient.get(`http://127.0.0.1:8000/api/getInstructorVerifiedSubTrack/${id}`, this.requestOptions);\n  }\n}\nTestService.ɵfac = function TestService_Factory(t) {\n  return new (t || TestService)(i0.ɵɵinject(i1.HttpClient));\n};\nTestService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TestService,\n  factory: TestService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAQ9D,OAAM,MAAOC,WAAW;EAEtBC,YAAoBC,UAAqB;IAArB,eAAU,GAAVA,UAAU;IAI9B,YAAO,GAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAErC,YAAO,GAAG,IAAIL,WAAW,CAAC;MACxB,QAAQ,EAAE,kBAAkB;MAC5B,eAAe,EAAE,UAAU,IAAI,CAACM,OAAO;KACxC,CAAC;IACF,mBAAc,GAAE;MAAEC,OAAO,EAAC,IAAI,CAACA;IAAO,CAAE;EAVK;EAY/CC,OAAO,CAACC,EAAS;IAChB,OAAQ,IAAI,CAACN,UAAU,CAACO,GAAG,CAAmC,wCAAwCD,EAAE,EAAE,CAAC;EAC5G;EAEAE,UAAU,CAACC,OAAW;IACpBC,OAAO,CAACC,GAAG,CAAC;MAACC,MAAM,EAACH;IAAO,CAAC,CAAC;IAC7B,OAAQ,IAAI,CAACT,UAAU,CAACa,IAAI,CAAC,wCAAwC,EAAC;MAACD,MAAM,EAACH;IAAO,CAAC,EAAC,IAAI,CAACK,cAAc,CAAC;EAC7G;EAEAC,oBAAoB,CAACT,EAAS;IAC5B,OAAQ,IAAI,CAACN,UAAU,CAACO,GAAG,CAAC,mDAAmDD,EAAE,EAAE,EAAC,IAAI,CAACQ,cAAc,CAAC;EAC1G;EAEAE,sBAAsB,CAACV,EAAS;IAC9B,OAAQ,IAAI,CAACN,UAAU,CAACO,GAAG,CAAC,2DAA2DD,EAAE,EAAE,EAAC,IAAI,CAACQ,cAAc,CAAC;EAClH;;AA7BahB,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAmB,SAAXnB,WAAW;EAAAoB,YAFV;AAAM","names":["HttpHeaders","TestService","constructor","httpClient","localStorage","getItem","api_key","headers","getTest","id","get","sendAnswer","answers","console","log","answer","post","requestOptions","getVerifiedSubtracks","getUnverifiedSubtracks","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\lenovo\\Desktop\\new\\Final-Project-Front-End\\src\\app\\test\\services\\test.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Question } from '../classes/exam';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TestService {\r\n\r\n  constructor(private httpClient:HttpClient) { }\r\n\r\n\r\n\r\n  api_key=localStorage.getItem('token');\r\n\r\n  headers = new HttpHeaders({\r\n    'Accept': 'application/json',\r\n    'Authorization': `Bearer ${this.api_key}`\r\n  });\r\n  requestOptions= { headers:this.headers };\r\n\r\ngetTest(id:number):Observable<{test:Question[],message:string}>{\r\n return  this.httpClient.get<{test:Question[],message:string}>(`http://127.0.0.1:8000/api/show/tests/${id}`);\r\n}\r\n\r\nsendAnswer(answers:any):Observable<any>{\r\n  console.log({answer:answers})\r\n  return  this.httpClient.post(`http://127.0.0.1:8000/api/test/answers`,{answer:answers},this.requestOptions);\r\n}\r\n\r\ngetVerifiedSubtracks(id:number):Observable<any>{\r\n  return  this.httpClient.get(`http://127.0.0.1:8000/api/getInstructorSubTrack/${id}`,this.requestOptions);\r\n}\r\n\r\ngetUnverifiedSubtracks(id:number):Observable<any>{\r\n  return  this.httpClient.get(`http://127.0.0.1:8000/api/getInstructorVerifiedSubTrack/${id}`,this.requestOptions);\r\n}\r\n\r\n\r\n\r\n\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}